SELECT CAST(ROW_NUMBER() OVER(ORDER BY OL.SeqNbr) as nvarchar) AS 'OL.INDEX',
   case when OL.BuyPrice = 0 or OL.Quantity = 0 then '' else dbo.fn_FormatCurrency(OL.BuyPrice * OL.Quantity) end AS 'OL.BUYLINETOTAL', 
   dbo.fn_FormatCurrency(OL.BuyPrice) AS 'OL.BUYUNITPRICE', 
   case when isnull(OL.CSMPPCTEntryPCT,0) = 0 then dbo.fn_FormatCurrency(OL.BuyPrice) else dbo.fn_FormatCurrency(OL.DealerCostAmt) end AS 'OL.BUYUNITPRICEPCT', 
   dbo.fn_FormatXMLChars(cast(ISNULL(CI.Description,'') as nvarchar(max))) AS 'OL.CI_DESCRIPTION', 
   dbo.fn_FormatXMLChars(cast(ISNULL(CI.GeneralNotes,'') as nvarchar(max))) AS 'OL.CI_GENERALNOTES', 
   dbo.fn_FormatXMLChars(case when OL.CatalogItemID > 0 then isnull(replace(CI.MFGItemNbr,'_',''),'') else isnull(OL.MFGItemNbr,'') end) AS 'OL.CI_MFGITEMNBR', 
   dbo.fn_FormatXMLChars(cast(ISNULL(MCI.MktDescription,'') as nvarchar(max))) AS 'OL.CI_MKTDESCRIPTION', 
   dbo.fn_FormatXMLChars(replace(case when substring(cast(ISNULL(MCI.MktFeatures,'') as nvarchar(max)),1,2) = '-/' then substring(cast(ISNULL(MCI.MktFeatures,'') as nvarchar(max)),3,len(cast(ISNULL(MCI.MktFeatures,'') as nvarchar(max)))-2) else cast(ISNULL(MCI.MktFeatures,'') as nvarchar(max)) end,'-/',char(13)) ) AS 'OL.CI_MKTFEATURES', 
   dbo.fn_FormatXMLChars(replace(case when substring(cast(ISNULL(MCI.MktHighlights,'') as nvarchar(max)),1,2) = '-/' then substring(cast(ISNULL(MCI.MktHighlights,'') as nvarchar(max)),3,len(cast(ISNULL(MCI.MktHighlights,'') as nvarchar(max)))-2) else cast(ISNULL(MCI.MktHighlights,'') as nvarchar(max)) end,'-/',char(13)) ) AS 'OL.CI_MKTHIGHLIGHTS', 
   dbo.fn_FormatXMLChars(replace(case when substring(cast(ISNULL(MCI.MktOptions1,'') as nvarchar(max)),1,2) = '-/' then substring(cast(ISNULL(MCI.MktOptions1,'') as nvarchar(max)),3,len(cast(ISNULL(MCI.MktOptions1,'') as nvarchar(max)))-2) else cast(ISNULL(MCI.MktOptions1,'') as nvarchar(max)) end,'-/',char(13)) ) AS 'OL.CI_MKTOPTIONS1', 
   dbo.fn_FormatXMLChars(replace(case when substring(cast(ISNULL(MCI.MktOptions2,'') as nvarchar(max)),1,2) = '-/' then substring(cast(ISNULL(MCI.MktOptions2,'') as nvarchar(max)),3,len(cast(ISNULL(MCI.MktOptions2,'') as nvarchar(max)))-2) else cast(ISNULL(MCI.MktOptions2,'') as nvarchar(max)) end,'-/',char(13)) ) AS 'OL.CI_MKTOPTIONS2', 
   dbo.fn_FormatXMLChars(cast(ISNULL(nullif(CI.MktDescription,''),ISNULL(MCI.MktDescription,'')) as nvarchar(max))) AS 'OL.MKTDESCRIPTION', 
   dbo.fn_FormatXMLChars(replace(case when substring(cast(ISNULL(nullif(CI.MktFeatures,''),ISNULL(MCI.MktFeatures,'')) as nvarchar(max)),1,2) = '-/' then substring(cast(ISNULL(nullif(CI.MktFeatures,''),ISNULL(MCI.MktFeatures,'')) as nvarchar(max)),3,len(cast(ISNULL(nullif(CI.MktFeatures,''),ISNULL(MCI.MktFeatures,'')) as nvarchar(max)))-2) else cast(ISNULL(nullif(CI.MktFeatures,''),ISNULL(MCI.MktFeatures,'')) as nvarchar(max)) end,'-/',char(13)) ) AS 'OL.MKTFEATURES', 
   dbo.fn_FormatXMLChars(replace(case when substring(cast(ISNULL(nullif(CI.MktHighlights,''),ISNULL(MCI.MktHighlights,'')) as nvarchar(max)),1,2) = '-/' then substring(cast(ISNULL(nullif(CI.MktHighlights,''),ISNULL(MCI.MktHighlights,'')) as nvarchar(max)),3,len(cast(ISNULL(nullif(CI.MktHighlights,''),ISNULL(MCI.MktHighlights,'')) as nvarchar(max)))-2) else cast(ISNULL(nullif(CI.MktHighlights,''),ISNULL(MCI.MktHighlights,'')) as nvarchar(max)) end,'-/',char(13)) ) AS 'OL.MKTHIGHLIGHTS', 
   dbo.fn_FormatXMLChars(replace(case when substring(cast(ISNULL(nullif(CI.MktOptions1,''),ISNULL(MCI.MktOptions1,'')) as nvarchar(max)),1,2) = '-/' then substring(cast(ISNULL(nullif(CI.MktOptions1,''),ISNULL(MCI.MktOptions1,'')) as nvarchar(max)),3,len(cast(ISNULL(nullif(CI.MktOptions1,''),ISNULL(MCI.MktOptions1,'')) as nvarchar(max)))-2) else cast(ISNULL(nullif(CI.MktOptions1,''),ISNULL(MCI.MktOptions1,'')) as nvarchar(max)) end,'-/',char(13)) ) AS 'OL.MKTOPTIONS1', 
   dbo.fn_FormatXMLChars(replace(case when substring(cast(ISNULL(nullif(CI.MktOptions2,''),ISNULL(MCI.MktOptions2,'')) as nvarchar(max)),1,2) = '-/' then substring(cast(ISNULL(nullif(CI.MktOptions2,''),ISNULL(MCI.MktOptions2,'')) as nvarchar(max)),3,len(cast(ISNULL(nullif(CI.MktOptions2,''),ISNULL(MCI.MktOptions2,'')) as nvarchar(max)))-2) else cast(ISNULL(nullif(CI.MktOptions2,''),ISNULL(MCI.MktOptions2,'')) as nvarchar(max)) end,'-/',char(13)) ) AS 'OL.MKTOPTIONS2', 
   dbo.fn_FormatCurrency(OL.SRCommCSMPCreditValue) AS 'OL.CSMP', 
   dbo.fn_FormatCurrency(ISNULL(OL.SRCommCSMPCreditValue,0) + ISNULL(OL.CSMPPCTAmt,0)) AS 'OL.CSMPAMTALL', 
   dbo.fn_FormatCurrency(ISNULL(OL.DealerCostAmt,0)) AS 'OL.DEALERCOST', 
   dbo.fn_FormatCurrency(ISNULL(CI.MFGPrice,0) * OL.Quantity) AS 'OL.EXTMSRP', 
   dbo.fn_FormatCurrency(OL.LineTotal) AS 'OL.LINETOTAL', 
   case when OL.isPrimaryInd = -1 then dbo.fn_FormatCurrency(dbo.fn_GetMergedSellPrice(OL.OrderID, OL.BundleID)) else '' end AS 'OL.GFCLINETOTAL', 
   dbo.fn_FormatCurrency(OL.LineTotal * OD.Lease24moFactor) AS 'OL.LINETOTAL24MOPYMT', 
   dbo.fn_FormatCurrency(OL.LineTotal * OD.Lease36moFactor) AS 'OL.LINETOTAL36MOPYMT', 
   dbo.fn_FormatCurrency(OL.LineTotal * OD.Lease48moFactor) AS 'OL.LINETOTAL48MOPYMT', 
   dbo.fn_FormatCurrency(OL.LineTotal * OD.Lease60moFactor) AS 'OL.LINETOTAL60MOPYMT', 
   dbo.fn_FormatCurrency(OL.LineTotal * OD.LeaseFactor) AS 'OL.LINETOTALLEASEPYMT', 
   case when OL.CatalogItemID <=-100 then '*' else '' end AS 'OL.MANUALENTRYFLAG', 
   case when ISNULL(MFG.ProductMfgID, -1) > 0 then dbo.fn_FormatXMLChars(ISNULL(MFG.Name,'')) else ISNULL(OL.MFGName, '') end AS 'OL.MFG', 
   dbo.fn_FormatXMLChars(cast(ISNULL(OL.Description,'') as nvarchar(max))) AS 'OL.DESCRIPTION', 
   case when isnull(ol.usedequipmentid,-1) > 0   
                  then 
                     dbo.fn_ReplaceHTMLChars(ue.machine) 
                  else 
                     dbo.fn_FormatXMLChars(cast(ISNULL(OL.Description,'') as nvarchar(max))) 
            end 
            AS 'OL.DESCRIPTIONREL', 
   dbo.fn_FormatXMLChars(ISNULL(OL.Model,'')) AS 'OL.MODEL', 
   case when isnull(OL.UsedEquipmentID,-1) > -1 OR BPOL.UsedEquipmentID > 1
                     then
                           case when isnull(OL.UsedEquipmentID,-1) > -1 
                                    then isnull(ea.Description, 'Unknown') 
                                 else isnull(cast(OL.Description as nvarchar(max)), 'Unknown') 
                           end + isnull(' (' + EA.AssetTag + ')', '') 
                     else 
                        dbo.fn_FormatXMLChars(case when OL.CatalogItemID <= -100 
                                             then case when (OL.Model = cast(OL.Description as nvarchar(max)) 
                                                               and cast(OL.Description as nvarchar(max))  <> '') 
                                                            OR (cast(OL.Description as nvarchar(max))  <> '' 
                                                                  and OL.Model = '') 
                                                            then ISNULL(cast(OL.Description as nvarchar(max)),'') 
                                                         else 
                                                            case when (cast(OL.Description as nvarchar(max))  = '' and OL.Model <> '') 
                                                                     OR (CHARINDEX(OL.Model,cast(OL.Description as nvarchar(max)) ) > 0)  
                                                                  then ISNULL(OL.Model,'') 
                                                               else
                                                                  ISNULL(OL.Model,'') + '-' + ISNULL(cast(OL.Description as nvarchar(max)),'') 
                                                            end 
                                                   end
                                             Else
                                                case when (CI.Model = cast(CI.Description as nvarchar(max)) and cast(CI.Description as nvarchar(max))  <> '') 
                                                         OR (cast(CI.Description as nvarchar(max))  <> '' and CI.Model = '') 
                                                      then ISNULL(cast(CI.Description as nvarchar(max)),'') 
                                                   else
                                                      case when (cast(CI.Description as nvarchar(max))  = '' and CI.Model <> '') 
                                                                  OR (CHARINDEX(CI.Model,cast(CI.Description as nvarchar(max)) ) > 0)  
                                                               then ISNULL(CI.Model,'') 
                                                            else
                                                               ISNULL(CI.Model,'') + '-' + ISNULL(cast(CI.Description as nvarchar(max)),'') 
                                                         end 
                                                end
                                             End) 
               end AS 'OL.MODEL-DESCRIPTION', 
   dbo.fn_FormatCurrency(ISNULL(OL.MSRP,0)) AS 'OL.MSRP', 
   case when ISNULL(OD.SRCommCSMPLevelID,-1) = -101 then dbo.fn_FormatCurrency(OL.AdjDealerCostAmt) else dbo.fn_FormatCurrency(OL.DealerCostAmt - OL.SRCommCSMPCreditValue) end AS 'OL.NETDEALERCOST', 
   case when ISNULL(OD.SRCommCSMPLevelID,-1) = -101 then dbo.fn_FormatCurrency(OL.AdjDealerCostAmt) else dbo.fn_FormatCurrency(OL.BuyPrice - OL.SRCommCSMPCreditValue) end AS 'OL.NETREPCOST', 
   cast(OL.PerBundleQuantity as nvarchar) AS 'OL.PERBUNDLEQTY', 
   dbo.fn_formatnumber(case when (select sum(case when o.CatalogItemID < 0 then o.BuyPrice * o.Quantity else cp.BuyPrice * o.Quantity end) from SNOrderLine o with (nolock) left join SNCatalogPrice cp with (nolock) on cp.CatalogItemID = o.CatalogItemID left join SNPriceLevel PL with (nolock) on PL.PriceLevelID = CP.PriceLevelID where o.OrderID = OL.OrderID and isnull(PL.IsStandardInd,-1) <> 0) > 0
                  then (OD.BoardCreditAmt - (select sum(case when o.CatalogItemID < 0 then o.BuyPrice * o.Quantity else cp.BuyPrice * o.Quantity end) from SNOrderLine o with (nolock) left join SNCatalogPrice cp with (nolock) on cp.CatalogItemID = o.CatalogItemID left join SNPriceLevel PL with (nolock) on PL.PriceLevelID = CP.PriceLevelID where o.OrderID = OL.OrderID and isnull(PL.IsStandardInd,-1) <> 0)) / (select sum(case when o.CatalogItemID < 0 then o.BuyPrice * o.Quantity else cp.BuyPrice * o.Quantity end) from SNOrderLine o with (nolock) left join SNCatalogPrice cp with (nolock) on cp.CatalogItemID = o.CatalogItemID left join SNPriceLevel PL with (nolock) on PL.PriceLevelID = CP.PriceLevelID where o.OrderID = OL.OrderID and isnull(PL.IsStandardInd,-1) <> 0)
                  else 0 end * 100,2) + '%' AS 'OL.PERCENTOVERBASE', 
   dbo.fn_FormatXMLChars(case when OL.PriceLevelID > 0 or OL.Quantity = 0 then (select PL.Name from SNPriceLevel PL with (nolock) where PL.PriceLevelID = OL.PriceLevelID) else 'N/A' end) AS 'OL.PRICELEVEL', 
   cast(OL.Quantity as nvarchar) AS 'OL.QTY', 
   dbo.fn_FormatCurrency(OD.BoardCreditAmt - (select sum(case when o.CatalogItemID < 0 then o.BuyPrice * o.Quantity else cp.BuyPrice * o.Quantity end) from SNOrderLine o with (nolock) left join SNCatalogPrice cp with (nolock) on cp.CatalogItemID = o.CatalogItemID left join SNPriceLevel PL with (nolock) on PL.PriceLevelID = CP.PriceLevelID where o.OrderID = OL.OrderID and isnull(PL.IsStandardInd,-1) <> 0)) AS 'OL.REVENUEABOVEBASE', 
   dbo.fn_FormatCurrency(case when OL.CatalogItemID < 0 then OL.BuyPrice else (select CP.BuyPrice from SNCatalogPrice CP with (nolock) join SNPriceLevel PL with (nolock) on PL.PriceLevelID = CP.PriceLevelID and PL.IsStandardInd <> 0 where CP.CatalogItemID = OL.CatalogItemID) end) '</OL.STANDARDPRICE>',
   
   @PriceLevels, 

   dbo.fn_FormatCurrency(ISNULL(OL.DealerCostAmt,0) * OL.Quantity) AS 'OL.TOTALDEALERCOST', 
   dbo.fn_FormatCurrency((select sum(case when o.CatalogItemID < 0 then o.BuyPrice * o.Quantity else cp.BuyPrice * o.Quantity end) from SNOrderLine o with (nolock) left join SNCatalogPrice cp with (nolock) on cp.CatalogItemID = o.CatalogItemID left join SNPriceLevel PL with (nolock) on PL.PriceLevelID = CP.PriceLevelID where o.OrderID = OL.OrderID and isnull(PL.IsStandardInd,-1) <> 0)) AS 'OL.TOTALSTANDARDBUY', 
   dbo.fn_FormatCurrency(OL.SellPrice) AS 'OL.UNITPRICE', 
   dbo.fn_FormatCurrency(OL.SellPrice * OD.LeaseFactor) AS 'OL.UNITPRICELEASEPYMT', 
   case when OL.isPrimaryInd = -1 then dbo.fn_FormatCurrency(dbo.fn_GetMergedSellPrice(OL.OrderID, OL.BundleID)/OL.Quantity) else '' end AS 'OL.GFCUNITPRICE', 
   dbo.fn_FormatCurrency(OL.SellPrice + (SELECT SUM(AdjAmount) FROM SNOrderLineAdjust with (nolock) WHERE OrderLineID = OL.OrderLineID)) AS 'OL.UNITPRICEA', 
   dbo.fn_FormatXMLChars(ISNULL(CI.OMDCode,'')) AS 'OL.PRODUCTCODE', 
   dbo.fn_FormatXMLChars(cast(isnull(OL.BundleName, '') as nvarchar)) AS 'OL.BUNDLENAME', 
   cast(isnull(UE.UsedEquipmentID, '') as nvarchar) AS 'OL.USEDEQUIPMENTID', 
   cast(isnull(UE.Comment, '') as nvarchar) AS 'OL.UECOMMENT', 
   cast(isnull(UE.AssetTag, '') as nvarchar) AS 'OL.UEASSETTAG', 
   cast(isnull(UEU.Abbreviation, '') as nvarchar) AS 'OL.UECHECKEDOUT', 
   cast(isnull(dbo.fn_ReplaceHTMLChars(UE.Machine), '') as nvarchar(max)) AS 'OL.UEMACHINE', 
   cast(isnull(dbo.fn_ReplaceHTMLChars(UE.Meter), '') as nvarchar(max)) AS 'OL.UEMETER', 
   cast(isnull(UE.Message, '') as nvarchar) AS 'OL.UEMESSAGE', 
   dbo.fn_FormatCurrency(UE.DealerCost) AS 'OL.UEDEALERCOST', 
   dbo.fn_FormatCurrency(UE.SellPrice) AS 'OL.UESELLPRICE', 
   dbo.fn_FormatDate(UE.DTExpired,3,0,0) AS 'OL.UEDTEXPIRED', 
   cast(isnull(UE.SerialNbr, '') as nvarchar) AS 'OL.UESERIALNBR', 
   cast(isnull(UES.Name, '') as nvarchar) AS 'OL.UESTATUSNAME'
   FROM SNOrderLine as OL with (nolock)
   JOIN SNOrder as OD with (nolock) on OD.OrderID = OL.OrderID
   LEFT JOIN SNCatalogItem as CI with (nolock) on CI.CatalogItemID = OL.CatalogItemID
   LEFT JOIN @CatalogServer.SCCatalogData.dbo.SCCat_CatalogItem as MCI with (nolock) on MCI.CatalogItemID = CI.MasterCatalogItemID
   LEFT JOIN SNProductMfg as MFG with (nolock) on MFG.ProductMfgID = CI.MfgID
   LEFT JOIN EAUsedEquipment as UE with (nolock) on UE.UsedEquipmentID = OL.UsedEquipmentID
   LEFT JOIN EAAssets as EA with (nolock) on EA.EAEquipmentID = UE.EAEquipmentID
   LEFT JOIN SNUser as UEU with (nolock) on UEU.UserID = UE.CheckedOutUserID
   LEFT JOIN SNUEStatus as UES with (nolock) on UES.UEStatusID = UE.UEStatusID
   LEFT JOIN SNAssocCatalogItem as AC with (nolock) on AC.CatalogItemID = OL.CatalogItemID and AC.ParentCatalogItemID = OL.BundleParentCatalogItemID


   LEFT JOIN (select * from (select ol.OrderLineId, 'PRICELEVEL' + cast(pl.PriceLevelID as nvarchar) tag, cp.BuyPrice BuyPrice
                        from SNOrderLine ol with (nolock)
                        left join SNPriceLevel pl with (nolock) on isnull(pl.IsStandardInd,0) = 0
                        left join SNCatalogPrice cp with (nolock) on cp.CatalogItemID = ol.CatalogItemID and cp.PriceLevelID = pl.PriceLevelID
                        where isnull(ol.ServiceInd,0) = 0 and ol.OrderID =  @OrderId ) d
         pivot(max(BuyPrice) for tag in( @PriceLevelCols )) r) p on p.OrderLineId = OL.OrderLineId


   JOIN SNOrderLine BPOL on BPOL.OrderID = OD.OrderID and BPOL.BundleID = OL.BundleID and BPOL.BundleOrder = 1
   Where ISNULL(OL.ServiceInd,0) = 0 AND ISNULL(AC.IsStarterSupply,0) <> -1 AND OL.OrderID =  @OrderId

