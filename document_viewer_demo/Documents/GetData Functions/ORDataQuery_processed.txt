SELECT dbo.fn_FormatXMLChars(isnull((select stuff((select ', ' + Model from SNOrderLine with (nolock) where OrderID = OD.OrderID and SeqNbr >= case when OD.AccessoryOnlyInd = 0 then 2 else 1 end order by SeqNbr for xml path('')),1,2,'')),'')) AS OR.ACCESSORIES, 
	 dbo.fn_FormatCurrency(((SELECT SUM(ISNULL(BuyPrice,0) * Quantity) FROM SNOrderLine with (nolock) WHERE ISNULL(ServiceInd,0) = 0 AND OrderID = OD.OrderID) - OD.SRCommCSMPCreditValue)) AS OR.ADJCOSTAMT, 
	 dbo.fn_FormatCurrency(OD.AdjGPAmt) AS OR.ADJGPAMT, 
	 dbo.fn_formatnumber(OD.AdjGPPCT * 100,2) + '%' AS OR.ADJGPPCT, 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.AmtFinanced) end AS OR.AMTFINANCED, 
	 case when isnull(OD.AmtFinanced,0) = 0 then '' else dbo.fn_FormatCurrency(OD.AmtFinanced - OD.BuyoutAmt) end AS OR.AMTFIN-LBO, 
	  case when isnull(BT.PaymentsPerYear,0) = 1 then 'X' else '' end AS OR.BASEBILLFREQANX, 
	  case when isnull(BT.PaymentsPerYear,0) = 12 then 'X' else '' end AS OR.BASEBILLFREQMOX, 
	  case when isnull(BT.PaymentsPerYear,0) = 4 then 'X' else '' end AS OR.BASEBILLFREQQTRX, 
	  case when isnull(BT.PaymentsPerYear,0) = 2 then 'X' else '' end AS OR.BASEBILLFREQSAX, 
	  case when isnull(BT.IncludeInLease,0) = 0 then 'X' else '' end AS OR.BASEBILLINLSNOX, 
	  case when isnull(BT.IncludeInLease,0) = -1 then 'X' else '' end AS OR.BASEBILLINLSYESX, 
	 dbo.fn_FormatCurrency(OD.GPTotal) AS OR.BASEGPAMT, 
	 dbo.fn_formatnumber(OD.TotalGPPCT * 100,2) + '%' AS OR.BASEGPPCT, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(OD.AmtFinanced ,0) * isnull(OD.LeaseFactor ,0))  end AS OR.BASELEASEPAYMENT, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else replace(dbo.fn_FormatCurrency(isnull(OD.AmtFinanced ,0) * isnull(OD.LeaseFactor ,0)),'$','') end AS OR.BASELEASEPAYMENTNOSIGN, 
	 case when isnull(OD.BidDeskDTReqSRepReview,'1/1/1900') <> '1/1/1900' then case when isnull(OD.BidDeskDTSRepReviewed,'1/1/1900') = '1/1/1900' then 'Requested Rep Review (' + convert(varchar,OD.BidDeskDTReqSRepReview,1) + ' ' + right(convert(varchar,OD.BidDeskDTReqSRepReview,100),7) + ')' else case upper(OD.BidDeskSRepStatus) when 'A' then 'Accepted By Rep (' + convert(varchar,OD.BidDeskDTSRepReviewed,1) + ' ' + right(convert(varchar,OD.BidDeskDTSRepReviewed,100),7) + ')' when 'R' then 'Rejected By Rep (' + convert(varchar,OD.BidDeskDTSRepReviewed,1) + ' ' + right(convert(varchar,OD.BidDeskDTSRepReviewed,100),7) + ')' else 'Unrecognized Status (' + OD.BidDeskSRepStatus + ')' end end else '' end AS OR.BIDDESKLABEL, 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingCustomerName ,'')) AS OR.BILLINGCUSTOMERNAME, 
	 dbo.fn_FormatXMLChars(isnull(BCU.OMDCustomerNbr ,'')) AS OR.BILLINGOMDCUSTOMERNBR, 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'A' then 'X' else '' end AS OR.BILLINGCUSTOMERASSOCIATION, 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'C' then 'X' else '' end AS OR.BILLINGCUSTOMERCORPORATION, 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'L' then 'X' else '' end AS OR.BILLINGCUSTOMERLLC, 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'M' then 'X' else '' end AS OR.BILLINGCUSTOMERMUNICIPALITY, 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'T' then 'X' else '' end AS OR.BILLINGCUSTOMERPARTNERSHIP, 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'P' then 'X' else '' end AS OR.BILLINGCUSTOMERPROPRIETORSHIP, 
	 dbo.fn_FormatXMLChars(isnull((select Name from SNCompanyType with (nolock) where CompanyTypeID = (select CompanyTypeID from SNCompany with (nolock) where CompanyID = BCU.CompanyID)),'')) AS OR.BILLINGCUSTOMERTYPE, 
	 dbo.fn_FormatXMLChars(isnull((select FedIDNbr from SNCompany with (nolock) where CompanyID = BCU.CompanyID),'')) AS OR.BILLINGCUSTOMERFEDID, 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingAddress1 ,'')) AS OR.BILLINGADDRESS1, 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingAddress2 ,'')) AS OR.BILLINGADDRESS2, 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingCity ,'')) AS OR.BILLINGCITY, 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingState ,'')) AS OR.BILLINGSTATE, 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingPostalCode ,'')) AS OR.BILLINGZIP, 
	 dbo.fn_FormatXMLChars(case when len(OD.BillingCity) > 0 then OD.BillingAddress1 + case when LEN(OD.BillingAddress2) > 0 then CHAR(13) + CHAR(10) + OD.BillingAddress2 else '' end  + CHAR(13) + CHAR(10) + OD.BillingCity + ', ' + OD.BillingState + ' ' + OD.BillingPostalCode else '' end) AS OR.BILLINGADDRESSLABEL, 
	 dbo.fn_FormatXMLChars(case when len(OD.BillingCity) > 0 then OD.BillingAddress1 + case when LEN(OD.BillingAddress2) > 0 then OD.BillingAddress2 else '' end  + ', ' + OD.BillingCity + ', ' + OD.BillingState + ' ' + OD.BillingPostalCode else '' end) AS OR.BILLINGADDRESSONELINE, 
	 case when isnull(OD.BillToContactSelect,-1) > 0 then dbo.fn_FormatXMLChars(isnull((select p.FirstName from SNContact c with (nolock) join SNPerson p with (nolock) on p.PersonID = c.PersonID where c.ContactID = OD.BillToContactSelect),'')) else dbo.fn_FormatXMLChars(isnull(OD.BillingContactName ,'')) end AS OR.BILLINGCONTACTFIRSTNAME, 
	 case when isnull(OD.BillToContactSelect,-1) > 0 then dbo.fn_FormatXMLChars(isnull((select p.LastName from SNContact c with (nolock) join SNPerson p with (nolock) on p.PersonID = c.PersonID where c.ContactID = OD.BillToContactSelect),'')) else '' end AS OR.BILLINGCONTACTLASTNAME, 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingContactName ,'')) AS OR.BILLINGCONTACTNAME, 
	 dbo.fn_FormatXMLChars(isnull(case when OD.BillToContactSelect > 0 then (SELECT Title FROM SNContact with (nolock) WHERE ContactID = OD.BillToContactSelect) else '' end,'')) AS OR.BILLINGCONTACTTITLE, 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingContactEmailAddr ,'')) AS OR.BILLINGCONTACTEMAILADDR, 
	 dbo.fn_FormatPhoneNumber(OD.BillingContactPhoneNbr) + case when isnull(OD.BillingContactPhoneExt,'') <> '' then 'x' + isnull(OD.BillingContactPhoneExt,'') else '' end AS OR.BILLINGCONTACTPHONENBR, 
	 dbo.fn_FormatPhoneNumber(OD.BillingContactFaxNbr) AS OR.BILLINGCONTACTFAXNBR, 
	 dbo.fn_FormatPhoneNumber(OD.BillingContactCellNbr) AS OR.BILLINGCONTACTCELLNBR, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then 'Service rates are fixed for the term of the contract' else '' end AS OR.BLENDESCTEXT, 
	 dbo.fn_FormatXMLChars(isnull(OD.ITP_BOT_Description,'')) AS OR.BOTDESCRIPTION, 
	 dbo.fn_FormatCurrency(isnull(OD.ITPBOTDownPayment,0)) AS OR.BOTDOWNPAYMENT, 
	 dbo.fn_FormatCurrency(isnull(OD.ITP_BOT_HourlyRate,0)) AS OR.BOTHOURLYRATE, 
	 case when isnull(OD.ITP_BOTHrs,-1) = -1 then '' else dbo.fn_FormatNumber(OD.ITP_BOTHrs,0) end AS OR.BOTHOURS, 
	 dbo.fn_FormatCurrency(isnull((select MoRepCost from SNServicesItem with (nolock) where ServicesItemID = (select top 1 ITP_BlockOfTimeServicesItemID from SNSystemParm with (nolock))),0)) AS OR.BOTORIGINALRATE, 
	 dbo.fn_FormatCurrency(case when isnull(BTB.IsInLeaseInd,0) = -1 then isnull(OD.LeaseFactor ,0) * isnull(OD.ITP_BOT_TotalCharge,0) else isnull(OD.ITP_BOT_TotalCharge,0) end) AS OR.BOTPPAYMENT, 
	 dbo.fn_FormatXMLChars(isnull(BTB.Name,'')) AS OR.BOTPAYMENTTERM, 
	 dbo.fn_FormatCurrency(isnull(OD.ITP_BOT_TotalCharge,0)) AS OR.BOTTOTALCHARGE, 
	 dbo.fn_FormatXMLChars(isnull(BR.BranchName ,'')) AS OR.BRANCH, 
	 dbo.fn_FormatXMLChars(isnull(BR.Abbreviation ,'')) AS OR.BRANCHABBREV, 
	 dbo.fn_FormatXMLChars(isnull(BR.LegalName ,'')) AS OR.BRANCHLEGALNAME, 
	 dbo.fn_FormatXMLChars(case when len(BR.City) > 0 then BR.Addr1 + case when LEN(BR.Addr2) > 0 then CHAR(10) + CHAR(13) + BR.Addr2 else '' end  + CHAR(10) + CHAR(13) + BR.City + ', ' + BR.State + ' ' + BR.PostalCode else '' end) AS OR.BRANCHADDRESS, 
	 dbo.fn_FormatXMLChars(isnull(BR.Addr1 ,'')) AS OR.BRANCHADDR1, 
	 dbo.fn_FormatXMLChars(isnull(BR.Addr2 ,'')) AS OR.BRANCHADDR2, 
	 dbo.fn_FormatXMLChars(isnull(BR.City ,'')) AS OR.BRANCHCITY, 
	 dbo.fn_FormatXMLChars(isnull(BR.State ,'')) AS OR.BRANCHSTATE, 
	 dbo.fn_FormatXMLChars(isnull(BR.PostalCode ,'')) AS OR.BRANCHPOSTALCODE, 
	 dbo.fn_FormatPhoneNumber(BR.Phone) AS OR.BRANCHPHONE, 
	 dbo.fn_FormatPhoneNumber(BR.Fax) AS OR.BRANCHFAX, 
	 dbo.fn_FormatXMLChars(isnull(BR.ImageLarge,'')) AS OR.BRANCHIMAGELARGE, 
	 dbo.fn_FormatXMLChars(isnull(BR.ImageSmall,'')) AS OR.BRANCHIMAGESMALL, 
	 dbo.fn_FormatCurrency(OD.BreakdownAmtFunded) AS OR.BREAKDOWNAMTFUNDED, 
	 dbo.fn_FormatCurrency(OD.BreakdownAmtInvoiced) AS OR.BREAKDOWNAMTINVOICED, 
	 dbo.fn_FormatCurrency(OD.BreakdownBookingTotal) AS OR.BREAKDOWNBOOKINGTOTAL, 
	 dbo.fn_FormatCurrency(OD.EquipmentTotal) AS OR.BREAKDOWNEQTOTAL, 
	 dbo.fn_FormatCurrency(OD.PaperCost) AS OR.BREAKDOWNFUNDINGFINANCED, 
	 case when isnull(OD.PaperRate ,0) = 0 then '' else dbo.fn_formatnumber(OD.PaperRate,5) end AS OR.BREAKDOWNFUNDEDRATE, 
	 dbo.fn_FormatCurrency(OD.BreakdownHouse) AS OR.BREAKDOWNHOUSE, 
	 dbo.fn_FormatXMLChars(isnull(BU.Name ,'')) AS OR.BUSINESS, 
	 dbo.fn_FormatXMLChars(isnull(BU.Address1 ,'')) AS OR.BUSINESSADDR1, 
	 dbo.fn_FormatXMLChars(isnull(BU.Address2 ,'')) AS OR.BUSINESSADDR2, 
	 dbo.fn_FormatXMLChars(isnull(BU.City ,'')) AS OR.BUSINESSCITY, 
	 dbo.fn_FormatXMLChars(isnull(BU.StateCode ,'')) AS OR.BUSINESSSTATE, 
	 dbo.fn_FormatXMLChars(isnull(BU.PostalCode ,'')) AS OR.BUSINESSPOSTALCODE, 
	 dbo.fn_FormatPhoneNumber(BU.Phone) AS OR.BUSINESSPHONE, 
	 dbo.fn_FormatPhoneNumber(BU.PhoneFax) AS OR.BUSINESSFAX, 
	 dbo.fn_FormatXMLChars(isnull(BU.ImageLarge,'')) AS OR.BUSINESSIMAGELARGE, 
	 dbo.fn_FormatXMLChars(isnull(BU.ImageSmall,'')) AS OR.BUSINESSIMAGESMALL, 
	 dbo.fn_FormatCurrency((SELECT SUM(ISNULL(BuyPrice,0) * Quantity) FROM SNOrderLine with (nolock) WHERE ISNULL(ServiceInd,0) = 0 AND OrderID = OD.OrderID)) AS OR.BUYTOTAL, 
	 dbo.fn_FormatCurrency(((SELECT SUM(ISNULL(BuyPrice,0) * Quantity) FROM SNOrderLine with (nolock) WHERE ISNULL(ServiceInd,0) = 0 AND OrderID = OD.OrderID) + OD.CSMPPCTAmt)) AS OR.BUYTOTALPCT, 
	 dbo.fn_FormatCurrency((SELECT SUM(ISNULL(EarnedCommAmt,0)) FROM SNSRCommEarned with (nolock) WHERE OrderID = OD.OrderID)) AS OR.COMMTOTAL, 
	 dbo.fn_FormatCurrency((SELECT SUM(ISNULL(EarnedCommAmt,0)) FROM SNSRCommEarned with (nolock) WHERE OrderID = OD.OrderID AND UserID = OD.SalesRepUserID)) AS OR.COMMPRIMARYREPTOTAL, 
	 dbo.fn_FormatXMLChars(replace(isnull(CFC.RPTName,''),'_',' ')) AS OR.CREDITAPPFCO, 
	 dbo.fn_FormatXMLChars(case when len(isnull(CFC.RPTCity,'')) > 0 then isnull(CFC.RPTAddress1,'') + case when LEN(isnull(CFC.RPTAddress2,'')) > 0 then ' ' + isnull(CFC.RPTAddress2,'') else '' end  + ', ' +  isnull(CFC.RPTCity,'') + ', ' + isnull(CFC.RPTState,'') + ' ' + isnull(CFC.RPTZip,'') else '' end) AS OR.CREDITAPPFCOADDRESSONELINE, 
	 dbo.fn_FormatXMLChars(isnull(CFC.RPTAddress1,'')) AS OR.CREDITAPPFCOADDRESS1, 
	 dbo.fn_FormatXMLChars(isnull(CFC.RPTAddress2,'')) AS OR.CREDITAPPFCOADDRESS2, 
	 dbo.fn_FormatXMLChars(isnull(CFC.RPTCity,'')) AS OR.CREDITAPPFCOCITY, 
	 dbo.fn_FormatXMLChars(isnull(CFC.RPTState,'')) AS OR.CREDITAPPFCOSTATE, 
	 dbo.fn_FormatXMLChars(isnull(CFC.RPTZip,'')) AS OR.CREDITAPPFCOZIP, 
	 dbo.fn_FormatCurrency((OD.SRCommCSMPCreditValue + OD.CSMPPCTAmt)) AS OR.CSMPAMTALL, 
	 dbo.fn_FormatXMLChars(isnull(OD.SRCommCSMPContractNbr,'')) AS OR.CSMPCONTRACT, 
	 dbo.fn_FormatCurrency(OD.SRCommCSMPCreditValue) AS OR.CSMPCREDITAMT, 
	 case when OD.SRCommCSMPLevelID = -100 then 'Custom' else case when  OD.SRCommCSMPLevelID = -102 then 'Strategic' else dbo.fn_FormatXMLChars(isnull(CSMP.LevelName,'')) end end  AS OR.CSMPCREDITNAME, 
	 case when isnull(OD.CurrentMonthlyCost,0) = 0 then '' else dbo.fn_FormatCurrency(isnull(OD.CurrentMonthlyCost,0)) end AS OR.CURRENTMONTHLYCOST, 
	 dbo.fn_FormatXMLChars(isnull(OD.CustomerPO,'')) AS OR.CUSTOMERPO, 
	 case when isnull(OD.CustomerUpgradeind,0) = -1 then 'X' else '' end AS OR.CUSTOMERUPGRADEX, 
	 dbo.fn_FormatXMLChars(isnull(OD.Dear,'')) AS OR.DEAR, 
	 case when isnull(OD.ElevatorInd,0) = -1 then 'X' else '' end AS OR.DELIVERYFEEELEVATORX, 
	 dbo.fn_formatnumber(OD.DeliveryNbrFloors,0) AS OR.DELIVERYFEENBRFLOORS, 
	 dbo.fn_FormatXMLChars(isnull((select stuff((select '; ' + isnull(Method,'') from SNDeliveryJob with (nolock) where OrderID = OD.OrderID order by DeliveryJobCount for xml path('')),1,2,'')),'')) AS OR.DELIVERYMETHOD, 
	 dbo.fn_FormatCurrency(isnull(OD.DMTotalAddFeesAmt,0)) AS OR.DMACCESSORYPRICE, 
	 dbo.fn_FormatCurrency(isnull(OD.DMDownPaymentAmt,0)) AS OR.DMDOWNPAYMENT, 
	 dbo.fn_FormatDate(OD.DTClosed,3,0,0) AS OR.DMDOWNPAYMENTDT, 
	 dbo.fn_FormatXMLChars(isnull(DMB.Name,'')) AS OR.DMPAYMENTTERM, 
	 dbo.fn_FormatCurrency(isnull(OD.DMTotalServicesAmt,0)) AS OR.DMPRIMARYPRICE, 
	 dbo.fn_FormatCurrency(isnull(OD.DMTotalSalesTaxAmt,0)) AS OR.DMSALESTAX, 
	 dbo.fn_FormatCurrency(isnull(OD.DMTotalOrderAmt,0)) AS OR.DMSUBTOTAL, 
	 dbo.fn_FormatCurrency(isnull((select sum(case when s.Type = 'P' then l.TotalSellAmt else 0 end) from SNOrderDMLine l with (nolock) join SNDMServices s with (nolock) on s.DMServiceID = l.DMServiceID where l.OrderID = OD.OrderID),0)) AS OR.DMSUMSERVICES, 
	 dbo.fn_FormatCurrency(isnull((select sum(case when s.Type <> 'P' then l.TotalSellAmt else 0 end) from SNOrderDMLine l with (nolock) join SNDMServices s with (nolock) on s.DMServiceID = l.DMServiceID where l.OrderID = OD.OrderID),0)) AS OR.DMSUMFEES, 
	 dbo.fn_FormatCurrency(isnull(OD.DMTotalSalesTaxAmt,0) + isnull(OD.DMTotalOrderAmt,0)) AS OR.DMTOTAL, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(LP.DocFee,0))  end AS OR.DOCFEE, 
	 cast(datepart(dd,OD.DTClosed) as nvarchar) AS OR.DTCDAY, 
	 cast(datepart(mm,OD.DTClosed) as nvarchar) AS OR.DTCMONTH, 
	 datename(mm,OD.DTClosed) AS OR.DTCMONTHNAME, 
	 dbo.fn_FormatDate(OD.DTClosed,3,0,0)  AS OR.DTCLOSED, 
	 cast(datepart(yy,OD.DTClosed) as nvarchar) AS OR.DTCYEAR, 
	 dbo.fn_FormatDate(PR.DTProposal,3,0,0)  AS OR.DTPROPOSAL, 
	 case when isnull(LP.isEOT_FixedPCT,0) = -1 then 'X' else '' end AS OR.EOTFIXPCTX, 
	 case when isnull(LP.isEOT_FMV,0) = -1 then 'X' else '' end AS OR.EOTFMVX, 
	 case when isnull(LP.isEOT_FMV,0) = -1 then 'FMV' else case when isnull(LP.isEOT_BuckOut,0) = -1 then '$Out' else case when isnull(LP.isEOT_FixedPCT,0) = -1 then 'Fixed PCT' else case when isnull(LP.isEOT_NoOption,0) = -1 then 'No Option' else '' end end end end AS OR.EOTOPTION, 
	 case when isnull(LP.isEOT_BuckOut,0) = -1 then 'X' else '' end AS OR.EOTOUTX, 
	 dbo.fn_FormatDate(PR.DTExpectedClose,3,0,0)  AS OR.EXPCLOSEDT, 
	 dbo.fn_FormatDate(OD.FCOApprovedDT,3,0,0)  AS OR.FCOAPPAPPROVEDATE, 
	 dbo.fn_FormatXMLChars(isnull(OD.FCOAppNbr ,'')) AS OR.FCOAPPNBR, 
	 dbo.fn_FormatDate(OD.FCOApprovalValidThruDT,3,0,0)  AS OR.FCOAPPRVALIDTHRUDATE, 
	 dbo.fn_FormatDate(OD.FCOApplicationDT,3,0,0)  AS OR.FCOAPPLDATE, 
	 dbo.fn_FormatXMLChars(cast(isnull(OD.FCOConditions ,'') as nvarchar(max))) AS OR.FCOAPPRCONDITIONS, 
	 dbo.fn_FormatXMLChars(isnull(FC.RPTAddress1,'')) AS OR.FCOADDRESS1, 
	 dbo.fn_FormatXMLChars(isnull(FC.RPTAddress2,'')) AS OR.FCOADDRESS2, 
	 dbo.fn_FormatXMLChars(isnull(FC.RPTCity,'')) AS OR.FCOCITY, 
	 dbo.fn_FormatXMLChars(isnull(FC.RPTState,'')) AS OR.FCOSTATE, 
	 dbo.fn_FormatXMLChars(isnull(FC.RPTZip,'')) AS OR.FCOZIP, 
	 dbo.fn_FormatPhoneNumber(FC.AppPhoneNbr) AS OR.FCOPHONENBR, 
	 dbo.fn_FormatXMLChars(case when isnull(OD.FCOLegalName,'') = '' then case when isnull(OD.BillingCustomerName,'') = '' then  isnull(BCU.RPTName ,'') else OD.BillingCustomerName end else OD.FCOLegalName end) AS OR.FCOLEGALNAME, 
	 dbo.fn_FormatXMLChars(isnull(OD.FCOLegalName ,'')) AS OR.FCOLEGALNAMEASIS, 
	 dbo.fn_FormatXMLChars(replace(isnull(CO.Name,''),'_',' ')) AS OR.FCONAME, 
	 cast(datepart(dd,getdate()) as nvarchar) AS OR.GENDAY, 
	 cast(datepart(mm,getdate()) as nvarchar) AS OR.GENMONTH, 
	 datename(mm,getdate()) AS OR.GENMONTHNAME, 
	 cast(datepart(yy,getdate()) as nvarchar) AS OR.GENYEAR, 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and OwnershipInd = 'C') then 'X' else '' end AS OR.HASCUSTOMEREQX, 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and isnull(OwnershipInd,'D') = 'D' and BPProductCategoryID not in (select ProductCategoryID from SNProductCategory with (nolock) where isnull(IsNotMachine,0) = -1)) then 'X' else '' end AS OR.HASDEALEREQX, 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and isnull(OwnershipInd,'') = 'D' and BPProductCategoryID not in (select ProductCategoryID from SNProductCategory with (nolock) where isnull(IsNotMachine,0) = -1)) then 'Existing EQ' else '' end AS OR.HASEXISTINGEQLABEL, 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and isnull(OwnershipInd,'') = 'D' and BPProductCategoryID not in (select ProductCategoryID from SNProductCategory with (nolock) where isnull(IsNotMachine,0) = -1)) then 'X' else '' end AS OR.HASEXISTINGEQX, 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and isnull(OwnershipInd,'') = '' and isnull(ServiceInd,0) = 0) then 'X' else '' end AS OR.HASNEWEQX, 
	 case when exists(select * from SNOBDServiceLine with (nolock) where OBDID = OD.OrderID) then 'X' else '' end AS OR.HASSERVICEX, 
	 case when isnull(BT.IncludeInLease,0) = -1 then case when exists(select * from SNOBDServiceLine with (nolock) where OBDID = OD.OrderID) then 'X' else '' end else '' end AS OR.HASSERVICEXPTONLY, 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and BPProductCategoryID in (select ProductCategoryID from SNProductCategory with (nolock) where isnull(IsNotMachine,0) = -1)) then 'X' else '' end AS OR.HASSOFTWAREX, 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and isnull(Condition,'') = 'U') then 'X' else '' end AS OR.HASUSEDEQX, 
	  dbo.fn_FormatXMLChars(isnull((select top 1 isnull(pr.FirstName,'') + ' ' + case when isnull(pr.MiddleName,'') <> '' then pr.MiddleName + ' ' else '' end + isnull(pr.LastName,'') from SNUser u with (nolock) join SNHierarchyNode p with (nolock) on p.ObjectKey = u.UserID join SNHierarchyNode c with (nolock) on c.ParentHierarchyNodeID = p.HierarchyNodeID join SNPerson pr with (nolock) on pr.PersonID = u.PersonID where c.ObjectKey = OD.SalesRepUserID),isnull(SMP.FirstName,'') + ' ' + case when isnull(SMP.MiddleName,'') <> '' then  SMP.MiddleName + ' ' else '' end + isnull(SMP.LastName,''))) AS OR.IMMEDIATEMANAGERNAME, 
	 dbo.fn_FormatCurrency(isnull(OD.ITPTotalDealerCostAmt,0)) AS OR.ITPDEALERCOST, 
	 dbo.fn_FormatCurrency(isnull(OD.ITPDownPaymentAmt,0)) AS OR.ITPDOWNPAYMENT, 
	 dbo.fn_FormatDate(OD.DTClosed,3,0,0) AS OR.ITPDOWNPAYMENTDT, 
	 dbo.fn_FormatCurrency(isnull(OD.ITPTotalGP,0)) AS OR.ITPGP, 
	 dbo.fn_FormatCurrency(case when isnull(IPB.IsInLeaseInd,0) = -1 then isnull(OD.LeaseFactor ,0) * isnull(OD.ITPTotalSellAmt,0) else isnull(OD.ITPTotalSellAmt,0) end) AS OR.ITPPAYMENT, 
	 dbo.fn_FormatXMLChars(isnull(IPB.Name,'')) AS OR.ITPPAYMENTTERM, 
	 dbo.fn_FormatNumber(OD.ITPTotalGPPCT * 100,2) + '%' AS OR.ITPTOTALGPPCT, 
	 dbo.fn_FormatCurrency(isnull(OD.ITPTotalRepCostAmt,0)) AS OR.ITPREPCOST, 
	 dbo.fn_FormatCurrency(isnull(OD.ITPTotalSellAmt,0)) AS OR.ITPSELLCOST, 
	 case when isnull(OD.LeaseACHInd,0) = -1 then 'X' else '' end AS OR.LEASEACHX, 
	 case when isnull(OD.LeaseACHInd,0) = -1 then '' else 'X' end AS OR.LEASEACHXNO, 
	 dbo.fn_FormatXMLChars(isnull(OD.LeaseACHBankAcctNbr ,'')) AS OR.LEASEACHBANKACCTNBR, 
	 dbo.fn_FormatXMLChars(isnull(OD.LeaseACHBankRouteNbr ,'')) AS OR.LEASEACHBANKROUTENBR, 
	 dbo.fn_FormatXMLChars(isnull(stuff((select ', ' + Name from SNLeaseAdjustType with (nolock) where ',' + isnull(OD.ActiveLeaseAdjustTypeIDs,'') + ',' like '%,' + cast(LeaseAdjustTypeID as nvarchar) + ',%' for xml path('')),1,2,''),'')) AS OR.LEASEADJUSTTYPES, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else isnull(nullif(dbo.fn_formatnumber((select RateFactor from SNLeasePrice with (nolock) where LeasePriceID = OD.LeaseFactorSelect),5),'0.00000'),'') end AS OR.LEASEBASEFACTOR, 
	 dbo.fn_FormatDate(OD.LeaseCommenceDT,3,0,0) AS OR.LEASECOMMENCEDT, 
	 case when isnull(OD.isDCAInd,0) = -1 then 'X' else '' end AS OR.LEASEDCAX, 
	 case when isnull(OD.isDCAInd,0) = -1 then '' else 'X' end AS OR.LEASEDCAXNO, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.LeaseFactor ,0) = 0 then '' else cast(OD.LeaseFactor as nvarchar) end end AS OR.LEASEFACTOR, 
	 dbo.fn_FormatDate(OD.LeaseFirstPymtDueDT,3,0,0) AS OR.LEASEFIRSTPYMTDUEDT, 
	 dbo.fn_FormatDate(OD.LeaseFirstUsageDT,3,0,0) AS OR.LEASEFIRSTUSAGEDT, 
	 substring(dbo.fn_FormatDate(OD.LeaseFirstUsageDT,3,0,0),1,5) + ' - ' + substring(dbo.fn_FormatDate(OD.LeaseFirstPymtDueDT,3,0,0),1,5) AS OR.LEASEFIRSTUSAGEPERIOD, 
	 dbo.fn_formatnumber(isnull(OD.NbrInterimRentDays,0),0) AS OR.LEASEINTERIMDAYS, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0))  end AS OR.LEASEINTERIMEQPERDIEM, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0) * isnull(OD.NbrInterimRentDays,0)) * .25)  end AS OR.LEASEINTERIMEQ25RENT, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0) * isnull(OD.NbrInterimRentDays,0))  end AS OR.LEASEINTERIMEQRENT, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(round(isnull(OD.PaymentAmtMonthlyFin,0) / 30, 2),0))  end AS OR.LEASEINTERIMPERDIEM, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0) + isnull(round((isnull(OD.PaymentAmtMonthlyFin,0) / 30) - ((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30), 2),0)) * isnull(OD.NbrInterimRentDays,0))  end AS OR.LEASEINTERIMRENT, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(((isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0) + isnull(round((isnull(OD.PaymentAmtMonthlyFin,0) / 30) - ((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30), 2),0)) * isnull(OD.NbrInterimRentDays,0)) - round(((isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0) * isnull(OD.NbrInterimRentDays,0)) * .25),2))  end AS OR.LEASEINTERIMRENTLESS25, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(round((isnull(OD.PaymentAmtMonthlyFin,0) / 30) - ((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30), 2),0))  end AS OR.LEASEINTERIMSVCPERDIEM, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(round((isnull(OD.PaymentAmtMonthlyFin,0) / 30) - ((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30), 2),0) * isnull(OD.NbrInterimRentDays,0))  end AS OR.LEASEINTERIMSVCRENT, 
	 dbo.fn_FormatDate(OD.InstallDT,3,0,0) AS OR.LEASEINSTALLDT, 
	 dbo.fn_FormatXMLChars(isnull(OD.LeaseMasterAgreementNbr ,'')) AS OR.LEASEMASTERAGREEMENTNBR, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatXMLChars(isnull(LPL.Name,'')) end AS OR.LEASEPRICELEVEL, 
	 dbo.fn_FormatXMLChars(isnull(LP.Name ,'')) AS OR.LEASEPRODUCT, 
	 dbo.fn_FormatXMLChars(case when isnull(SBT.FundedInLeaseInd,0) = -1 or isnull(IPB.IsInLeaseInd,0) = -1 or isnull(BTB.IsInLeaseInd,0) = -1 or isnull(DMB.IsInLeaseInd,0) = -1 then '* Payment includes ' + case when isnull(SBT.FundedInLeaseInd,0) = -1 then 'IT Services' else '' end + case when isnull(IPB.IsInLeaseInd,0) = -1 then case when isnull(SBT.FundedInLeaseInd,0) = -1 then ' and ' else '' end + 'IT Products' else '' end + case when isnull(BTB.IsInLeaseInd,0) = -1 then case when isnull(SBT.FundedInLeaseInd,0) = -1 or isnull(IPB.IsInLeaseInd,0) = -1 then ' and ' else '' end + 'Block of Time' else '' end + case when isnull(DMB.IsInLeaseInd,0) = -1 then case when isnull(SBT.FundedInLeaseInd,0) = -1 or isnull(IPB.IsInLeaseInd,0) = -1 or isnull(BTB.IsInLeaseInd,0) = -1 then ' and ' else '' end + 'Document Management' else '' end else '' end) AS OR.LEASEPYMTINCLUDES, 
	 dbo.fn_FormatXMLChars(isnull(OD.LeaseScheduleNbr ,'')) AS OR.LEASESCHEDULENBR, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(case when BT.IncludeInLease = -1 then isnull(OD.MaintMonthValueActual,0) else 0 end)  end AS OR.LEASESERVICEPAYMENT, 
	 dbo.fn_FormatCurrency(isnull(OD.LeaseSecurityDepAmt,0)) AS OR.LEASESECURITYDEPAMT, 
	 case when isnull(OD.isTaxExemptInd,0) = -1 then 'X' else '' end AS OR.LEASETAXEXEMPTX, 
	 case when isnull(OD.isTaxExemptInd,0) = -1 then '' else 'X' end AS OR.LEASETAXEXEMPTXNO, 
	 case when isnull(OD.isTaxExemptInd,0) = -1 then 'Yes' else 'No' end AS OR.LEASETAXEXEMPTYESNO, 
	 dbo.fn_FormatCurrency(OD.MaintBasePayment) AS OR.MAINTBASEPAYMENT, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatCurrency(OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) end AS OR.MAINTBASEPAYMENTY2, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatCurrency((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) end AS OR.MAINTBASEPAYMENTY3, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatCurrency(((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100)) end AS OR.MAINTBASEPAYMENTY4, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatCurrency((((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100)) * (OD.SPM_Y5EscalatePCT / 100)) end AS OR.MAINTBASEPAYMENTY5, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatCurrency(((((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100)) * (OD.SPM_Y5EscalatePCT / 100)) * (OD.SPM_Y6EscalatePCT / 100)) end AS OR.MAINTBASEPAYMENTY6, 
	 dbo.fn_FormatCurrency(OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) AS OR.MAINTBASEPAYMENTY2PROJECTED, 
	 dbo.fn_FormatCurrency((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) AS OR.MAINTBASEPAYMENTY3PROJECTED, 
	 dbo.fn_FormatCurrency(((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100)) AS OR.MAINTBASEPAYMENTY4PROJECTED, 
	 dbo.fn_FormatCurrency((((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100)) * (CT.Y5EscalatePCT / 100)) AS OR.MAINTBASEPAYMENTY5PROJECTED, 
	 dbo.fn_FormatCurrency(((((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100)) * (CT.Y5EscalatePCT / 100)) * (CT.Y6EscalatePCT / 100)) AS OR.MAINTBASEPAYMENTY6PROJECTED, 
	 dbo.fn_FormatXMLChars(isnull(BT.Name,'')) AS OR.MAINTBILLINGCYCLE, 
	 dbo.fn_FormatXMLChars(case when isnull(BT.IncludeInLease,0) = -1 then case LP.PaymentFrequency when 1 then 'Annually' when 2 then 'Semi-Annually' when 4 then 'Quarterly' else 'Monthly' end else isnull(BT.Name,'') end) AS OR.MAINTBILLINGCYCLELEASE, 
	 dbo.fn_FormatXMLChars(isnull(BT.OtherName,'')) AS OR.MAINTBILLINGCYCLEOTHER, 
	 dbo.fn_FormatXMLChars(upper(isnull(BT.OtherName,''))) AS OR.MAINTBILLINGCYCLEOTHERCAPS, 
	 dbo.fn_FormatXMLChars(isnull(CT.Description,'')) AS OR.MAINTCONTRACTDESC, 
	 dbo.fn_FormatXMLChars(isnull(CT.LegalText,'')) AS OR.MAINTCONTRACTLEGALTEXT, 
	 dbo.fn_FormatXMLChars(isnull(CT.Name,'')) AS OR.MAINTCONTRACTTYPE, 
	 (case when OD.MaintStartDateV2 > 2 then dbo.fn_FormatDate(DATEADD(M,OD.MaintNumMonths,DATEADD(D,OD.MaintStartDateV2,'12/30/1899')),3,0,0) else '' end)  AS OR.MAINTENDDATEV2, 
	 dbo.fn_FormatCurrency((select sum(BundleQuantity * FixedAmount) from SNOrderLine with (nolock) where OrderID = OD.OrderID)) AS OR.MAINTFIXEDANNUAL, 
	 cast(isnull(OD.MaintNumMonths ,'') as nvarchar) AS OR.MAINTNUMMONTHS, 
	 dbo.fn_FormatXMLChars(case when OD.MaintOverBillingCycle = -1 then isnull(BT.Name,'') else isnull(OBT.Name,'') end) AS OR.MAINTOVERBILLINGCYCLE, 
	 dbo.fn_FormatXMLChars(case when OD.MaintOverBillingCycle = -1 then isnull(BT.OtherName,'') else isnull(OBT.OtherName,'') end) AS OR.MAINTOVERBILLINGCYCLEOTHER, 
	 dbo.fn_FormatXMLChars(upper(case when OD.MaintOverBillingCycle = -1 then isnull(BT.OtherName,'') else isnull(OBT.OtherName,'') end)) AS OR.MAINTOVERBILLINGCYCLEOTHERCAPS, 
	 dbo.fn_FormatDate(OD.MaintStartDate,3,0,0) AS OR.MAINTSTARTDATE, 
	 (case when OD.MaintStartDateV2 > 1 then dbo.fn_FormatDate(DATEADD(D,OD.MaintStartDateV2,'12/30/1899'),3,0,0) else '' end)  AS OR.MAINTSTARTDATEV2, 
	 (case when OD.MaintStartDateV2 > 1 then dbo.fn_FormatDate(DATEADD(D,OD.MaintStartDateV2,'12/30/1899'),3,0,0) else 'Install Date' end)  AS OR.MAINTSTARTDATEV2METRO, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatDate(dateadd(yy,1,OD.MaintStartDate),3,0,0) end AS OR.MAINTSTARTDATEY2, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatDate(dateadd(yy,2,OD.MaintStartDate),3,0,0) end AS OR.MAINTSTARTDATEY3, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatDate(dateadd(yy,3,OD.MaintStartDate),3,0,0) end AS OR.MAINTSTARTDATEY4, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatDate(dateadd(yy,4,OD.MaintStartDate),3,0,0) end AS OR.MAINTSTARTDATEY5, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatDate(dateadd(yy,5,OD.MaintStartDate),3,0,0) end AS OR.MAINTSTARTDATEY6, 
	 dbo.fn_FormatDate(dateadd(yy,1,OD.MaintStartDate),3,0,0) AS OR.MAINTSTARTDATEY2PROJECTED, 
	 dbo.fn_FormatDate(dateadd(yy,2,OD.MaintStartDate),3,0,0) AS OR.MAINTSTARTDATEY3PROJECTED, 
	 dbo.fn_FormatDate(dateadd(yy,3,OD.MaintStartDate),3,0,0) AS OR.MAINTSTARTDATEY4PROJECTED, 
	 dbo.fn_FormatDate(dateadd(yy,4,OD.MaintStartDate),3,0,0) AS OR.MAINTSTARTDATEY5PROJECTED, 
	 dbo.fn_FormatDate(dateadd(yy,5,OD.MaintStartDate),3,0,0) AS OR.MAINTSTARTDATEY6PROJECTED, 
	 dbo.fn_FormatCurrency(OD.MaintBasePayment * (12/isnull(BT.PaymentsPerYear,12))) AS OR.MAINTTOTALBASEPAYMENT, 
	 case when isnull(OD.ApprovedByUserID,-1) < 0 then '' else case isnull(OD.ManagerApproved,0) when 1 then 'Approved By Manager' when 2 then 'Declined By Manager' else 'No Action By Manager' end + '(' + dbo.fn_FormatXMLChars((select isnull(cPR.FirstName,'') + ' ' + case when isnull(cPR.MiddleName,'') <> '' then cPR.MiddleName + ' ' else '' end + isnull(cPR.LastName,'') from SNUser cUS with (nolock) join SNPerson cPR with (nolock) on cPR.PersonID = cUS.PersonID where cUS.UserID = OD.ApprovedByUserID)) + ')' end AS OR.MGRAPPROVEDLABEL, 
	 case when isnull(OD.IsMNSInd,0) = -1 then 'Yes' else 'No' end AS OR.MNSINDYESNO, 
	 case when isnull(OD.IsMNSInd,0) = -1 then 'X' else '' end AS OR.MNSINDYESX, 
	 case when isnull(OD.IsMPSInd,0) = -1 then 'Yes' else 'No' end AS OR.MPSINDYESNO, 
	 case when isnull(OD.IsMPSInd,0) = -1 then 'X' else '' end AS OR.MPSINDYESX, 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrLeasePymts,0) = 0 then '' else cast(OD.NbrLeasePymts as nvarchar) end end AS OR.NBRLEASEPYMTS, 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrLeasePymts,0) = 0 then '' else cast((isnull(LP.PaymentFrequency,12) * OD.NbrLeasePymts)/12 as nvarchar) end end AS OR.NBRLEASEPYMTSCAN, 
	 case when isnull(OD.NbrLeasePymts + OD.NbrDeferredPymts,0) = 0 then '' else cast((OD.NbrLeasePymts + OD.NbrDeferredPymts) as nvarchar) end AS OR.NBRPYMTSNBRDEF, 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrDeferredPymts,0) = 0 then case when isnull(OD.LeaseOverride,0) = -1 then dbo.fn_FormatNumber(isnull(OD.OverrideLeaseTerm,0),0) else case when isnull(OD.PaymentNbrFin,0) = 0 then '' else dbo.fn_FormatNumber(isnull(OD.NbrLeasePymts,0),0) end end else dbo.fn_FormatNumber(isnull(OD.NbrDeferredPymts,0),0) + ' @' + char(13) + case when isnull(OD.LeaseOverride,0) = -1 then dbo.fn_FormatNumber(isnull(OD.OverrideLeaseTerm,0) - isnull(OD.NbrDeferredPymts,0),0) else dbo.fn_FormatNumber(isnull(OD.PaymentNbrFin,0) - isnull(OD.NbrDeferredPymts,0),0) end + ' @' end end AS OR.NBRPYMTSTBLW, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 
                    then '' 
                    else case when isnull(OD.NbrDeferredPymts,0) = 0 and isnull(LP.isDefStep,0) = 0 
                                then case when OD.PaymentAmtMonthlyFin = 0 then '' 
                                        else case when isnull(BT.IncludeInLease,0) = -1 
                                                    then dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) 
                                                    else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) 
                                            end 
                                    end 
                            when isnull(OD.NbrDeferredPymts,0) <> 0 and isnull(LP.isDefStep,0) = 0  
                                then '$0.00' + char(13) + case when isnull(BT.IncludeInLease,0) = -1  
                                                                then dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) 
                                                            else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) 
                                                        end 
                            when isnull(OD.NbrDeferredPymts,0) = 0 and isnull(LP.isDefStep,0) <> 0 
                                then cast(LP.DS1NbrPymts as nvarchar) + ' @ ' +  dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0) * LP.DS1PCTPymt) 
                                    + case when LP.DS2NbrPymts > 0 
                                            then ' then ' + case when LP.DS3NbrPymts > 0 
                                                                    then cast(LP.DS2NbrPymts as nvarchar) 
                                                                else cast(OD.NbrLeasePymts - LP.DS1NbrPymts as nvarchar)
                                                            end + ' @ ' +  dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0) * LP.DS2PCTPymt) 
                                            else '' 
                                    end 
                                    + case when LP.DS3NbrPymts > 0 
                                            then ' then ' + cast(OD.NbrLeasePymts - (LP.DS1NbrPymts + LP.DS2NbrPymts) as nvarchar) + ' @ ' 
                                                +  dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0) * LP.DS3PCTPymt) 
                                            else '' 
                                    end 
                            else '' 
                        end 
            end 
            AS OR.DSLSPYMTSUM, 
	 case when isnull(OD.NewCustomerInd,0) = -1 then 'Yes' else 'No' end AS OR.NEWCUSTOMER, 
	 case when isnull(OD.NewCustomerInd,0) = -1 then 'X' else '' end AS OR.NEWCUSTOMERX, 
	 case when isnull(OD.NewPlacementInd,0) = -1 then 'X' else '' end AS OR.NEWPLACEMENTX, 
	 dbo.fn_FormatXMLChars(ISNULL(cast(OD.Note as nvarchar(max)),'')) AS OR.NOTE, 
	 dbo.fn_formatnumber(isnull((select sum(Quantity) from SNOrderLine with (nolock) where OrderID = OD.OrderID and isPrimaryInd = -1),0),0) AS OR.NUMMACHINECFG, 
	 cast(OD.OrderID as nvarchar) AS OR.ORDERID, 
	 case when OD.MaintOverBillingCycle = -1 and BT.PaymentsPerYear = 1 then 'X' else case when OBT.PaymentsPerYear = 1 then 'X'  else '' end end AS OR.OVEBILLFREQANX, 
	 case when OD.MaintOverBillingCycle = -1 and BT.PaymentsPerYear = 12 then 'X' else case when OBT.PaymentsPerYear = 12 then 'X'  else '' end end AS OR.OVEBILLFREQMOX, 
	 case when OD.MaintOverBillingCycle = -1 and BT.PaymentsPerYear = 4 then 'X' else case when OBT.PaymentsPerYear = 4 then 'X'  else '' end end AS OR.OVEBILLFREQQTRX, 
	 case when OD.MaintOverBillingCycle = -1 and BT.PaymentsPerYear = 2 then 'X' else case when OBT.PaymentsPerYear = 2 then 'X'  else '' end end AS OR.OVEBILLFREQSAX, 
	 dbo.fn_FormatCurrency(OD.MaintTotalChargeback) AS OR.OVERRIDECHARGEBACK, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end AS OR.PAYMENTAMTMONTHLYFIN, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else replace(dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin),'$','') end AS OR.PAYMENTAMTMONTHLYFINNOSIGN, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100))) end end AS OR.PAYMENTAMTMONTHLYFINY2, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + ((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100))) end end AS OR.PAYMENTAMTMONTHLYFINY3, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100))) end end AS OR.PAYMENTAMTMONTHLYFINY4, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + ((((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100)) * (OD.SPM_Y5EscalatePCT / 100))) end end AS OR.PAYMENTAMTMONTHLYFINY5, 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (((((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100)) * (OD.SPM_Y5EscalatePCT / 100)) * (OD.SPM_Y6EscalatePCT / 100))) end end AS OR.PAYMENTAMTMONTHLYFINY6, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (OD.MaintBasePayment * (CT.Y2EscalatePCT / 100))) end AS OR.PAYMENTAMTMONTHLYFINY2PROJECTED, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + ((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100))) end AS OR.PAYMENTAMTMONTHLYFINY3PROJECTED, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100))) end AS OR.PAYMENTAMTMONTHLYFINY4PROJECTED, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + ((((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100)) * (CT.Y5EscalatePCT / 100))) end AS OR.PAYMENTAMTMONTHLYFINY5PROJECTED, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (((((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100)) * (CT.Y5EscalatePCT / 100)) * (CT.Y6EscalatePCT / 100))) end AS OR.PAYMENTAMTMONTHLYFINY6PROJECTED, 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when (isnull(OD.AmtFinanced ,0) * isnull(OD.LeaseFactor ,0)) + OD.MaintBasePayment = 0 then '' else dbo.fn_FormatCurrency((isnull(OD.AmtFinanced ,0) * isnull(OD.LeaseFactor ,0)) + OD.MaintBasePayment) end end AS OR.PAYMENTAMTMONTHLYFINWITHSERVICE, 
	 case when isnull(OD.LeaseOverride,0) = -1 then cast(isnull(OD.OverrideLeaseTerm,0) as nvarchar) else case when isnull(OD.PaymentNbrFin ,0) = 0 then '' else cast(OD.PaymentNbrFin as nvarchar) end end AS OR.PAYMENTNBRFIN, 
	 case when isnull(OD.LeaseOverride,0) = -1 then cast(isnull(OD.OverrideLeaseTerm - 1,0) as nvarchar) else case when isnull(OD.PaymentNbrFin ,0) = 0 then '' else cast(OD.PaymentNbrFin - 1 as nvarchar) end end AS OR.PAYMENTNBRFINMINUSONE, 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when BT.IncludeInLease = -1 then case when OD.PaymentAmtMonthlyFin + OD.MaintBasePayment = 0 then '' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin + OD.MaintBasePayment) end else case when OD.PaymentAmtMonthlyFin = 0 then '' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end end AS OR.PAYMENTWITHSERVICE, 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when BT.FundedInLeaseInd = -1 then case when OD.PaymentAmtMonthlyFin + OD.MaintBasePayment = 0 then '' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin + OD.MaintBasePayment) end else case when OD.PaymentAmtMonthlyFin = 0 then '' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end end AS OR.PAYMENTFUNDEDWITHSERVICE, 
	 dbo.fn_FormatCurrency(OD.PBChargeBackAmt) AS OR.PBCHARGEBACK, 
	 case when isnull(OD.PricingMethod,0) <> 0 then 'Pricing is Non Conforming - ' else '' end AS OR.PRICECONFORM, 
	 dbo.fn_FormatXMLChars(isnull(PL.Name ,'')) AS OR.PRICELEVEL, 
	 dbo.fn_FormatXMLChars(isnull(PL.Description ,'')) AS OR.PRICELEVELDESCRIPTION, 
	 dbo.fn_FormatXMLChars(isnull(PL.LegalText ,'')) AS OR.PRICELEVELLEGALTEXT, 
	 case isnull(OD.PricingMethod,0) when 0 then 'Point Book' when 1 then 'Promo/Special' when 2 then 'Bid Desk' when 3 then 'Branch Manager' when 4 then 'Double Contest' else '' end AS OR.PRICEMETHOD, 
	 dbo.fn_FormatXMLChars(isnull(OD.ProposalName,'')) AS OR.PROPOSALNAME, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.PS24MoPymt) end AS OR.PS24MOPYMT, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.PS36MoPymt) end AS OR.PS36MOPYMT, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.PS48MoPymt) end AS OR.PS48MOPYMT, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.PS60MoPymt) end AS OR.PS60MOPYMT, 
	 case when LP.PaymentFrequency = 1 then 'X' else '' end AS OR.PYMTFREQANX, 
	 case when LP.PaymentFrequency = 12 then 'Monthly' else
                                    case when LP.PaymentFrequency = 4 then 'Quarterly' else
                                    case when LP.PaymentFrequency = 2 then 'Semi-Annual' else
                                    case when LP.PaymentFrequency = 1 then 'Annual' else '??Unknown' end end end end AS OR.PYMTFREQLONG, 
	 case when LP.PaymentFrequency = 12 then 'X' else '' end AS OR.PYMTFREQMOX, 
	 case when LP.PaymentFrequency = 4 then 'X' else '' end AS OR.PYMTFREQQTRX, 
	 case when LP.PaymentFrequency = 2 then 'X' else '' end AS OR.PYMTFREQSAX, 
	 case when LP.PaymentFrequency = 12 then 'MO' else
                                    case when LP.PaymentFrequency = 4 then 'QT' else
                                    case when LP.PaymentFrequency = 2 then 'SA' else
                                    case when LP.PaymentFrequency = 1 then 'AN' else '??' end end end end AS OR.PYMTFREQSHORT, 
	 dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin + (select sum(isnull(BundleQuantity,1) * isnull(MonthlyMeter,0)) from SNOrderLine with (nolock) where OrderID = OD.OrderID)) AS OR.PYMTPLUSSERVPLUSPM, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrDeferredPymts,0) = 0 then case when OD.PaymentAmtMonthlyFin = 0 then '' else case when isnull(BT.IncludeInLease,0) = -1 then dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end else '$0.00' + char(13) + case when isnull(BT.IncludeInLease,0) = -1 then dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end end AS OR.PYMTSTBL, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrDeferredPymts,0) > 0 then cast(isnull(OD.NbrDeferredPymts,0) as nvarchar) + ' @ $0.00' + char(13) + cast(OD.NbrLeasePymts - isnull(OD.NbrDeferredPymts,0) as nvarchar) + ' @ ' + dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) else cast(OD.NbrLeasePymts as nvarchar) + ' @ ' + dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end AS OR.PYMTSTBLDEF, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrDeferredPymts,0) = 0 then case when OD.PaymentAmtMonthlyFin = 0 then '' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end else '$0.00' + char(13) + dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end AS OR.PYMTSTBLTOTAL, 
	 dbo.fn_FormatCurrency((select sum(BuyPrice * Quantity) from SNOrderLine with (nolock) where OrderID = OD.OrderID) + (select sum(case when isnull(oat.IsSoftCost,0) = -1 then case when oat.CreditDebitInd = 'C' then -1 * oa.AdjAmount else oa.AdjAmount end else 0 end) from SNOrderAdjustment oa with (nolock) join SNOrderAdjType oat with (nolock) on oat.OrderAdjTypeID = oa.OrderAdjTypeID where oa.OrderID = OD.OrderID)) AS OR.REPCOSTANDEXPENSES, 
	  dbo.fn_FormatXMLChars(isnull(SMP.FirstName,'') + ' ' + case when isnull(SMP.MiddleName,'') <> '' then  SMP.MiddleName + ' ' else '' end + isnull(SMP.LastName,'')) AS OR.SALESMANAGERNAME, 
	 dbo.fn_FormatXMLChars(isnull(SRP.FirstName,'') + ' ' + case when isnull(SRP.MiddleName,'') <> '' then  SRP.MiddleName + ' ' else '' end + isnull(SRP.LastName,'')) AS OR.SALESREP, 
	 dbo.fn_FormatPhoneNumber((select p.PhoneNbr from SNPhone p with (nolock) join SNEntityPhone e with (nolock) on e.PhoneID = p.PhoneID where e.EntityID = SRP.EntityID and e.PhoneTypeID = (select PhoneTypeID from SNPhoneType with (nolock) where SystemLabel = 'Person.CellPhone'))) AS OR.SALESREPCELLPHONE, 
	 dbo.fn_FormatXMLChars(isnull(SRP.EmailAddress ,'')) AS OR.SALESREPEMAIL, 
	 dbo.fn_FormatPhoneNumber(PH.PhoneNbr) AS OR.SALESREPPHONE, 
	 dbo.fn_FormatXMLChars(isnull(PH.PhoneExt,'')) AS OR.SALESREPPHONEEXT, 
	 dbo.fn_FormatXMLChars(isnull(SR.Title,'')) AS OR.SALESREPTITLE, 
	 dbo.fn_FormatXMLChars(isnull(EN.ImportXref ,'')) AS OR.SALESREPXREF, 
	 dbo.fn_FormatXMLChars(isnull(OD.SvcComments,'')) AS OR.SERVICECOMMENTS, 
	 dbo.fn_FormatCurrency(OD.SalesRepCommissionAmt) AS OR.SRCCOMMAMT, 
	 dbo.fn_FormatCurrency(OD.SRCommMaintBonus) AS OR.SRCCOMMBONUS, 
	 dbo.fn_formatnumber(OD.SRCommPCTPaid * 100,2) + '%' AS OR.SRCCOMMPCT, 
	 dbo.fn_FormatCurrency(OD.SRCommMaintService) AS OR.SRCCOMMSVCBONUS, 
	 dbo.fn_FormatXMLChars(isnull(OD.InvoiceNbr,'')) AS OR.SRCINVOICENBR, 
	 dbo.fn_FormatXMLChars(isnull(CLVL.Name,'')) AS OR.SRCLEVELNAME, 
	 dbo.fn_FormatXMLChars(cast(isnull(OD.SRCommNote,'') as nvarchar(max))) AS OR.SRCNOTE, 
	 dbo.fn_FormatCurrency(OD.SplitSRCommissionAmt) AS OR.SRCOTHERSALESREPCOMMAMT, 
	 dbo.fn_formatnumber(OD.OtherSalesRepPCT,2) + '%' AS OR.SRCOTHERSALESREPPCT, 
	 dbo.fn_FormatCurrency((select sum(EarnedCommAmt) from SNSRCommEarned with (nolock) where OrderID = OD.OrderID and UserID = OD.SalesRepUserID)) AS OR.SRCPRIAMT, 
	 dbo.fn_FormatCurrency(isnull(OD.AdjGPAmt,0) * isnull(OD.SRCommPCTPaid,0)) AS OR.SRCPRIAMTEQCOMM, 
	 dbo.fn_FormatCurrency(OD.PrimarySRCommissionAmt) AS OR.SRCPRIMSALESREPCOMMAMT, 
	 dbo.fn_FormatXMLChars(isnull(OD.SalesOrderNbr,'')) AS OR.SRCSALESORDER, 
	 dbo.fn_FormatCurrency(OD.SegmentBonusValue) AS OR.SRCSEGMENTBONUSAMT, 
	 dbo.fn_FormatCurrency(OD.SRCommServiceValue) AS OR.SRCSERVICEAMT, 
	 dbo.fn_formatnumber(OD.SRCommServiceRate * 100,2) + '%' AS OR.SRCSERVICERATE, 
	 dbo.fn_FormatXMLChars(isnull((select isnull(oPR.FirstName,'') + ' ' + isnull(oPR.LastName,'') from SNUser oUS with (nolock) join SNPerson oPR with (nolock) on oPR.PersonID = oUS.PersonID where oUS.UserID = OD.OtherSalesRepUserID),'')) AS OR.SRCSPLITREPNAME, 
	 dbo.fn_FormatCurrency(OD.SRCommTotalAmt) AS OR.SRCTOTALCOMMAMT, 
	 dbo.fn_FormatXMLChars(isnull((select top 1 Note from SNOrderHistory h with (nolock) where h.OrderID = OD.OrderID and h.ToStatusID = OD.OrderStatusID order by DTChanged desc),'')) AS OR.STATUSNOTE, 
	 dbo.fn_FormatCurrency(OD.SubTotalAmount) AS OR.SUBTOTALSELLPRICE, 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.LineTotal * o.Lease24moFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS OR.SUBTOTAL24MOPYMT, 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.LineTotal * o.Lease36moFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS OR.SUBTOTAL36MOPYMT, 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.LineTotal * o.Lease48moFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS OR.SUBTOTAL48MOPYMT, 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.LineTotal * o.Lease60moFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS OR.SUBTOTAL60MOPYMT, 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.LineTotal * o.LeaseFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS OR.SUBTOTALLEASEPYMT, 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.SellPrice * o.LeaseFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS OR.SUBTOTALUNITLEASEPYMT, 
	 case when isnull(OD.SVANNUALGP,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVANNUALGP) end AS OR.SVANNUALGP, 
	 case when isnull(OD.SVANNUALPRICE,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVANNUALPRICE) end AS OR.SVANNUALPRICE, 
	 case when isnull(SBT.PaymentsPerYear,0) = 1 then 'X' else '' end AS OR.SVBASEBILLFREQANX, 
	 case when isnull(SBT.PaymentsPerYear,0) = 12 then 'X' else '' end AS OR.SVBASEBILLFREQMOX, 
	 case when isnull(SBT.PaymentsPerYear,0) = 4 then 'X' else '' end AS OR.SVBASEBILLFREQQTRX, 
	 case when isnull(SBT.PaymentsPerYear,0) = 2 then 'X' else '' end AS OR.SVBASEBILLFREQSAX, 
	 dbo.fn_FormatXMLChars(isnull(SBT.Name,'')) AS OR.SVBILLCYCLENAME, 
	 dbo.fn_FormatXMLChars(isnull(SBT.OtherName,'')) AS OR.SVBILLCYCLENAMEOTHER, 
	 case when isnull(SBT.PaymentsPerYear,0) = 0 then '' else dbo.fn_FORMATNumber(SBT.PaymentsPerYear,0) end AS OR.SVBILLCYCLEPPY, 
	 case when isnull(OD.SVCOSTPERUSER,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVCOSTPERUSER) end AS OR.SVCOSTPERUSER, 
	 case when isnull(OD.SVSTARTDT,'1/1/1900') = '1/1/1900' or isnull(OD.SVTERM,0) = 0 then '' else convert(nvarchar, dateadd(mm,OD.SVTERM,OD.SVSTARTDT), 101) end AS OR.SVENDDT, 
	 case when isnull(OD.SVMOCOST,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVMOCOST) end AS OR.SVMOCOST, 
	 case when isnull(OD.SVMOGP,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVMOGP) end AS OR.SVMOGP, 
	 case when isnull(OD.SVMOREPCOST,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVMOREPCOST) end AS OR.SVMOREPCOST, 
	 case when isnull(OD.SVMOSELLPRICE,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVMOSELLPRICE) end AS OR.SVMOSELLPRICE, 
	 case when isnull(OD.SVMOSELLPRICE,0) = 0 then '' else replace(dbo.fn_FormatCurrency(OD.SVMOSELLPRICE),'$','') end AS OR.SVMOSELLPRICENOSIGN, 
	 case when isnull(OD.SVNBRUSERS,0) = 0 then '' else dbo.fn_FormatNumber(OD.SVNBRUSERS,0) end AS OR.SVNBRUSERS, 
	 case when isnull(OD.SVMOSELLPRICE,0) = 0 or isnull(SBT.PaymentsPerYear,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVMOSELLPRICE * (12/isnull(SBT.PaymentsPerYear,12))) end AS OR.SVPERIODSELLPRICE, 
	 case when isnull(OD.SVSTARTDT,'1/1/1900') = '1/1/1900' then '' else convert(nvarchar, OD.SVSTARTDT, 101) end AS OR.SVSTARTDT, 
	 case when isnull(OD.SVTERM,0) = 0 then '' else dbo.fn_FormatNumber(OD.SVTERM,0) end AS OR.SVTERM, 
	 case when isnull(OD.SVTOTALGP,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVTOTALGP) end AS OR.SVTOTALGP, 
	 case when isnull(OD.SVTOTALVALUE,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVTOTALVALUE) end AS OR.SVTOTALVALUE, 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((isnull(OD.AmtFinanced ,0) * isnull(OD.LeaseFactor ,0)) * isnull(LP.NbrDown,0))  end AS OR.TOTALADVLEASEPYMT, 
	 dbo.fn_FormatCurrency((select sum(OL.DealerCostAmt) from SNOrderLine OL with (nolock) where OL.OrderID = OD.OrderID)) AS OR.TOTALDEALERCOST, 
	 dbo.fn_FormatCurrency(ISNULL(OD.TotalMSRP,0)) AS OR.TOTALMSRP, 
	 dbo.fn_formatnumber(ISNULL(case when OD.TotalMSRP > 0 and OD.AmtFinanced > 0 then OD.AmtFinanced/OD.TotalMSRP else OD.TotalMSRP end,0) * 100,0) + '%' AS OR.TOTALMSRPPCTFIN, 
	 cast(isnull(LP.NbrDown,0) as nvarchar) AS OR.TOTALNUMADVLEASEPYMT, 
	 cast(isnull(LP.NbrDeferred,0) as nvarchar) AS OR.TOTALNUMDEFLEASEPYMT, 
	 dbo.fn_FormatCurrency(TotalOrderAmount - isnull((select AdjAmount from SNOrderAdjustment oa with (nolock) join SNOrderAdjType oat with (nolock) on oat.OrderAdjTypeID = oa.OrderAdjTypeID where oa.OrderID = OD.OrderID and oat.Taxind = -1),0)) AS OR.TOTALSELLNOTAX, 
	 dbo.fn_FormatCurrency(TotalOrderAmount) AS OR.TOTALSELLPRICE, 
	 dbo.fn_FormatCurrency(OD.MaintTotalValue) AS OR.TOTALSERVICECONTRACT, 
	 dbo.fn_FormatXMLChars(isnull(TC.Name,'')) AS OR.TRAVELCATEGORY, 
	 dbo.fn_FormatXMLChars(isnull(TC.DocDescription,'')) AS OR.TRAVELCATEGORYDOCDESC, 
	 dbo.fn_FormatCurrency(TC.MinimumCharge) AS OR.TRAVELCATEGORYMINCHARGE, 
	 dbo.fn_FormatCurrency(TC.MillageCharge) AS OR.TRAVELCATEGORYMILLAGECHARGE, 
	 dbo.fn_FormatCurrency(TC.DailyCostPerPersonAmt) AS OR.TRAVELCATEGORYPERPERSONDAILYCOST, 
	 dbo.fn_formatnumber(OD.TravelNbrNights,0) AS OR.TRAVELFEENBRDAYS, 
	 dbo.fn_formatnumber(OD.TravelNbrMiles,0) AS OR.TRAVELFEENBRMILES, 
	 dbo.fn_formatnumber(OD.TravelNbrPeople,0) AS OR.TRAVELFEENBRPEOPLE, 
	 case when OS.SystemLabel = 'PROP' then 'Proposal' else 'Order' end AS OR.TYPEOFOBJECT, 
	 dbo.fn_FormatXMLChars(isnull(ST.Name,'')) AS OR.TYPEOFSALE, 
	 case when OS.SystemLabel = 'PROP' then 'P-' else '' end  + cast(OD.OrderID as nvarchar) AS OR.TYPEORDERID, 
	 dbo.fn_FormatXMLChars(replace(isnull(UCO.Name,''),'_',' ')) AS OR.UPGRADEFCONAME, 
	 dbo.fn_FormatXMLChars(case when len(isnull(UFC.RPTCity,'')) > 0 then isnull(UFC.RPTAddress1,'') + case when LEN(isnull(UFC.RPTAddress2,'')) > 0 then ' ' + isnull(UFC.RPTAddress2,'') else '' end  + ', ' +  isnull(UFC.RPTCity,'') + ', ' + isnull(UFC.RPTState,'') + ' ' + isnull(UFC.RPTZip,'') else '' end) AS OR.UPGRADEFCOADDRESSONELINE, 
	 dbo.fn_FormatXMLChars(isnull(UFC.RPTAddress1,'')) AS OR.UPGRADEFCOADDRESS1, 
	 dbo.fn_FormatXMLChars(isnull(UFC.RPTAddress2,'')) AS OR.UPGRADEFCOADDRESS2, 
	 dbo.fn_FormatXMLChars(isnull(UFC.RPTCity,'')) AS OR.UPGRADEFCOCITY, 
	 dbo.fn_FormatXMLChars(isnull(UFC.RPTState,'')) AS OR.UPGRADEFCOSTATE, 
	 dbo.fn_FormatXMLChars(isnull(UFC.RPTZip,'')) AS OR.UPGRADEFCOZIP, 
	 dbo.fn_FormatXMLChars(case when isnull(OD.LeaseUpgradeInd,0) = -1 then  isnull(OD.UpgradeFCOLeaseNbr,'') else '' end) AS OR.UPGRADELSNBR, 
	 case when isnull(OD.LeaseUpgradeInd,0) = 0 then 'X' else '' end AS OR.UPGRADENOX, 
	 isnull((select Name from SNUpgradeType with (nolock) where UpgradeTypeID = OD.UpgradeTypeID),'') AS OR.UPGRADETYPE, 
	 case when isnull(OD.LeaseUpgradeInd,0) = -1 then 'Yes' else 'No' end AS OR.UPGRADEYESNO, 
	 case when isnull(OD.LeaseUpgradeInd,0) = -1 then 'X' else '' end AS OR.UPGRADEYESX, 
	 dbo.fn_FormatCurrency(OD.SPMTotalMoAdjAmt) AS OR.TOTALMOAMT, 
	 dbo.fn_FormatCurrency(OD.SPMTotalMoAdjAmtActual) AS OR.TOTALMOAMTACTUAL, 
	 case when isnull(OD.WTMORevAmt,0) = 0 then '' else dbo.fn_FormatCurrency(OD.WTMORevAmt) end AS OR.WTMOREVAMT, 
	 case when isnull(OD.WTMOGPAmt,0) = 0 then '' else dbo.fn_FormatCurrency(OD.WTMOGPAmt) end AS OR.WTMOGPAMT, 
	 case when isnull(OD.WTTerm,0) = 0 then '' else dbo.fn_FormatNumber(OD.WTTerm,0) end AS OR.WTTERM, 
	 dbo.fn_FormatXMLChars(isnull(OD.CreditAppNote ,'')) + '</OR.CREDITAPPNOTE>'
            FROM SNOrder AS OD with (nolock) 
            LEFT JOIN SNContractType as CT with (nolock) on CT.ContractTypeID = OD.MaintContractTypeID 
            LEFT JOIN SNBillingCycleType as BT with (nolock) on BT.BillingCycleTypeID = OD.MaintBillingCycle 
            LEFT JOIN SNBillingCycleType as OBT with (nolock) on OBT.BillingCycleTypeID = OD.MaintOverBillingCycle
            LEFT JOIN SNBillingCycleType as SBT with (nolock) on SBT.BillingCycleTypeID = OD.SVBillingCycleID
            LEFT JOIN SNLeaseProduct as LP with (nolock) on LP.LeaseProductID = OD.LeaseProductID 
            LEFT JOIN SNSaleType as ST with (nolock) on ST.SaleTypeID = OD.SaleTypeID 
            LEFT JOIN SNOrderStatus as OS with (nolock) on OS.OrderStatusID = OD.OrderStatusID 
            LEFT JOIN SNPriceLevel as PL with (nolock) on PL.PriceLevelID = OD.PriceLevelID 
            LEFT JOIN SNLeasePriceLevel as LPL with (nolock) on LPL.LeasePriceLevelID = OD.LeasePriceLevelID 
            LEFT JOIN SNCustomer as BCU with (nolock) on BCU.CustomerID = OD.BillToAccountSelect 
            LEFT JOIN SNUser as SR with (nolock) on SR.UserID = OD.SalesRepUserID 
            LEFT JOIN SNPerson as SRP with (nolock) on SRP.PersonID = SR.PersonID 
            LEFT JOIN SNEntityPhone as EP with (nolock) on EP.EntityID = SRP.EntityID and EP.PhoneTypeID = (Select PhoneTypeID FROM SNPhoneType with (nolock) where Name = 'Office') 
            LEFT JOIN SNPhone as PH with (nolock) on PH.PhoneID = EP.PhoneID 
            LEFT JOIN SNEntity as EN with (nolock) on EN.EntityID = SRP.EntityID 
            LEFT JOIN SNBranch as BR with (nolock) on BR.BranchID = SR.BranchID 
            LEFT JOIN SNBusiness as BU with (nolock) on BU.BusinessID = BR.BusinessID 
            LEFT JOIN SNProspect as PR with (nolock) on PR.ProspectID = OD.ProspectID 
            LEFT JOIN SNFinanceCompany as FC with (nolock) on FC.FCOID = OD.FCOID
            LEFT JOIN SNCompany as CO with (nolock) on CO.CompanyID = FC.CompanyID
            LEFT JOIN SNFinanceCompany as UFC with (nolock) on UFC.FCOID = OD.UpgradeFCOID
            LEFT JOIN SNCompany as UCO with (nolock) on UCO.CompanyID = UFC.CompanyID
            LEFT JOIN SNSRCommCSMPLevel as CSMP with (nolock) on CSMP.SRCommCSMPLevelID = OD.SRCommCSMPLevelID
            LEFT JOIN SNSRCommLevel as CLVL with (nolock) on CLVL.SRCommLevelID = OD.SRCommLevelID
            LEFT JOIN SNUser as SMU with (nolock) on SMU.UserID = BR.SalesManagerUserID
            LEFT JOIN SNPerson as SMP with (nolock) on SMP.PersonID = SMU.PersonID
            LEFT JOIN SNDMPaymentTerms as IPB with (nolock) on IPB.DMPaymentTermsID = OD.ITPPaymentTermsID
            LEFT JOIN SNDMPaymentTerms as BTB with (nolock) on BTB.DMPaymentTermsID = OD.ITP_BOT_PaymentTermsID
            LEFT JOIN SNDMPaymentTerms as DMB with (nolock) on DMB.DMPaymentTermsID = OD.DMPaymentTermsID
            LEFT JOIN SNCreditApplication as CA with (nolock) on CA.OrderID = OD.OrderID AND CA.SelectedSource = -1
            LEFT JOIN SNFinanceCompany as CFC with (nolock) on CFC.FCOID = CA.FCOID
            LEFT JOIN SNTravelCategory as TC with (nolock) on TC.TravelCategoryID = OD.TravelCategoryID