SELECT dbo.fn_FormatXMLChars(isnull((select stuff((select ', ' + Model from SNOrderLine with (nolock) where OrderID = OD.OrderID and SeqNbr >= case when OD.AccessoryOnlyInd = 0 then 2 else 1 end order by SeqNbr for xml path('')),1,2,'')),'')) AS 'AS ACCESSORIES', 
	 dbo.fn_FormatCurrency(((SELECT SUM(ISNULL(BuyPrice,0) * Quantity) FROM SNOrderLine with (nolock) WHERE ISNULL(ServiceInd,0) = 0 AND OrderID = OD.OrderID) - OD.SRCommCSMPCreditValue)) AS 'AS ADJCOSTAMT', 
	 dbo.fn_FormatCurrency(OD.AdjGPAmt) AS 'AS ADJGPAMT', 
	 dbo.fn_formatnumber(OD.AdjGPPCT * 100,2) + '%' AS 'AS ADJGPPCT', 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.AmtFinanced) end AS 'AS AMTFINANCED', 
	 case when isnull(OD.AmtFinanced,0) = 0 then '' else dbo.fn_FormatCurrency(OD.AmtFinanced - OD.BuyoutAmt) end AS 'AS AMTFIN-LBO', 
	  case when isnull(BT.PaymentsPerYear,0) = 1 then 'X' else '' end AS 'AS BASEBILLFREQANX', 
	  case when isnull(BT.PaymentsPerYear,0) = 12 then 'X' else '' end AS 'AS BASEBILLFREQMOX', 
	  case when isnull(BT.PaymentsPerYear,0) = 4 then 'X' else '' end AS 'AS BASEBILLFREQQTRX', 
	  case when isnull(BT.PaymentsPerYear,0) = 2 then 'X' else '' end AS 'AS BASEBILLFREQSAX', 
	  case when isnull(BT.IncludeInLease,0) = 0 then 'X' else '' end AS 'AS BASEBILLINLSNOX', 
	  case when isnull(BT.IncludeInLease,0) = -1 then 'X' else '' end AS 'AS BASEBILLINLSYESX', 
	 dbo.fn_FormatCurrency(OD.GPTotal) AS 'AS BASEGPAMT', 
	 dbo.fn_formatnumber(OD.TotalGPPCT * 100,2) + '%' AS 'AS BASEGPPCT', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(OD.AmtFinanced ,0) * isnull(OD.LeaseFactor ,0))  end AS 'AS BASELEASEPAYMENT', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else replace(dbo.fn_FormatCurrency(isnull(OD.AmtFinanced ,0) * isnull(OD.LeaseFactor ,0)),'$','') end AS 'AS BASELEASEPAYMENTNOSIGN', 
	 case when isnull(OD.BidDeskDTReqSRepReview,'1/1/1900') <> '1/1/1900' then case when isnull(OD.BidDeskDTSRepReviewed,'1/1/1900') = '1/1/1900' then 'Requested Rep Review (' + convert(varchar,OD.BidDeskDTReqSRepReview,1) + ' ' + right(convert(varchar,OD.BidDeskDTReqSRepReview,100),7) + ')' else case upper(OD.BidDeskSRepStatus) when 'A' then 'Accepted By Rep (' + convert(varchar,OD.BidDeskDTSRepReviewed,1) + ' ' + right(convert(varchar,OD.BidDeskDTSRepReviewed,100),7) + ')' when 'R' then 'Rejected By Rep (' + convert(varchar,OD.BidDeskDTSRepReviewed,1) + ' ' + right(convert(varchar,OD.BidDeskDTSRepReviewed,100),7) + ')' else 'Unrecognized Status (' + OD.BidDeskSRepStatus + ')' end end else '' end AS 'AS BIDDESKLABEL', 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingCustomerName ,'')) AS 'AS BILLINGCUSTOMERNAME', 
	 dbo.fn_FormatXMLChars(isnull(BCU.OMDCustomerNbr ,'')) AS 'AS BILLINGOMDCUSTOMERNBR', 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'A' then 'X' else '' end AS 'AS BILLINGCUSTOMERASSOCIATION', 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'C' then 'X' else '' end AS 'AS BILLINGCUSTOMERCORPORATION', 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'L' then 'X' else '' end AS 'AS BILLINGCUSTOMERLLC', 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'M' then 'X' else '' end AS 'AS BILLINGCUSTOMERMUNICIPALITY', 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'T' then 'X' else '' end AS 'AS BILLINGCUSTOMERPARTNERSHIP', 
	 case when (select isnull(ct.TypeInd,'') from SNCompany co with (nolock) left join SNCompanyType ct with (nolock) on ct.CompanyTypeID = co.CompanyTypeID where co.CompanyID = BCU.CompanyID) = 'P' then 'X' else '' end AS 'AS BILLINGCUSTOMERPROPRIETORSHIP', 
	 dbo.fn_FormatXMLChars(isnull((select Name from SNCompanyType with (nolock) where CompanyTypeID = (select CompanyTypeID from SNCompany with (nolock) where CompanyID = BCU.CompanyID)),'')) AS 'AS BILLINGCUSTOMERTYPE', 
	 dbo.fn_FormatXMLChars(isnull((select FedIDNbr from SNCompany with (nolock) where CompanyID = BCU.CompanyID),'')) AS 'AS BILLINGCUSTOMERFEDID', 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingAddress1 ,'')) AS 'AS BILLINGADDRESS1', 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingAddress2 ,'')) AS 'AS BILLINGADDRESS2', 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingCity ,'')) AS 'AS BILLINGCITY', 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingState ,'')) AS 'AS BILLINGSTATE', 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingPostalCode ,'')) AS 'AS BILLINGZIP', 
	 dbo.fn_FormatXMLChars(case when len(OD.BillingCity) > 0 then OD.BillingAddress1 + case when LEN(OD.BillingAddress2) > 0 then CHAR(13) + CHAR(10) + OD.BillingAddress2 else '' end  + CHAR(13) + CHAR(10) + OD.BillingCity + ', ' + OD.BillingState + ' ' + OD.BillingPostalCode else '' end) AS 'AS BILLINGADDRESSLABEL', 
	 dbo.fn_FormatXMLChars(case when len(OD.BillingCity) > 0 then OD.BillingAddress1 + case when LEN(OD.BillingAddress2) > 0 then OD.BillingAddress2 else '' end  + ', ' + OD.BillingCity + ', ' + OD.BillingState + ' ' + OD.BillingPostalCode else '' end) AS 'AS BILLINGADDRESSONELINE', 
	 case when isnull(OD.BillToContactSelect,-1) > 0 then dbo.fn_FormatXMLChars(isnull((select p.FirstName from SNContact c with (nolock) join SNPerson p with (nolock) on p.PersonID = c.PersonID where c.ContactID = OD.BillToContactSelect),'')) else dbo.fn_FormatXMLChars(isnull(OD.BillingContactName ,'')) end AS 'AS BILLINGCONTACTFIRSTNAME', 
	 case when isnull(OD.BillToContactSelect,-1) > 0 then dbo.fn_FormatXMLChars(isnull((select p.LastName from SNContact c with (nolock) join SNPerson p with (nolock) on p.PersonID = c.PersonID where c.ContactID = OD.BillToContactSelect),'')) else '' end AS 'AS BILLINGCONTACTLASTNAME', 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingContactName ,'')) AS 'AS BILLINGCONTACTNAME', 
	 dbo.fn_FormatXMLChars(isnull(case when OD.BillToContactSelect > 0 then (SELECT Title FROM SNContact with (nolock) WHERE ContactID = OD.BillToContactSelect) else '' end,'')) AS 'AS BILLINGCONTACTTITLE', 
	 dbo.fn_FormatXMLChars(isnull(OD.BillingContactEmailAddr ,'')) AS 'AS BILLINGCONTACTEMAILADDR', 
	 dbo.fn_FormatPhoneNumber(OD.BillingContactPhoneNbr) + case when isnull(OD.BillingContactPhoneExt,'') <> '' then 'x' + isnull(OD.BillingContactPhoneExt,'') else '' end AS 'AS BILLINGCONTACTPHONENBR', 
	 dbo.fn_FormatPhoneNumber(OD.BillingContactFaxNbr) AS 'AS BILLINGCONTACTFAXNBR', 
	 dbo.fn_FormatPhoneNumber(OD.BillingContactCellNbr) AS 'AS BILLINGCONTACTCELLNBR', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then 'Service rates are fixed for the term of the contract' else '' end AS 'AS BLENDESCTEXT', 
	 dbo.fn_FormatXMLChars(isnull(OD.ITP_BOT_Description,'')) AS 'AS BOTDESCRIPTION', 
	 dbo.fn_FormatCurrency(isnull(OD.ITPBOTDownPayment,0)) AS 'AS BOTDOWNPAYMENT', 
	 dbo.fn_FormatCurrency(isnull(OD.ITP_BOT_HourlyRate,0)) AS 'AS BOTHOURLYRATE', 
	 case when isnull(OD.ITP_BOTHrs,-1) = -1 then '' else dbo.fn_FormatNumber(OD.ITP_BOTHrs,0) end AS 'AS BOTHOURS', 
	 dbo.fn_FormatCurrency(isnull((select MoRepCost from SNServicesItem with (nolock) where ServicesItemID = (select top 1 ITP_BlockOfTimeServicesItemID from SNSystemParm with (nolock))),0)) AS 'AS BOTORIGINALRATE', 
	 dbo.fn_FormatCurrency(case when isnull(BTB.IsInLeaseInd,0) = -1 then isnull(OD.LeaseFactor ,0) * isnull(OD.ITP_BOT_TotalCharge,0) else isnull(OD.ITP_BOT_TotalCharge,0) end) AS 'AS BOTPPAYMENT', 
	 dbo.fn_FormatXMLChars(isnull(BTB.Name,'')) AS 'AS BOTPAYMENTTERM', 
	 dbo.fn_FormatCurrency(isnull(OD.ITP_BOT_TotalCharge,0)) AS 'AS BOTTOTALCHARGE', 
	 dbo.fn_FormatXMLChars(isnull(BR.BranchName ,'')) AS 'AS BRANCH', 
	 dbo.fn_FormatXMLChars(isnull(BR.Abbreviation ,'')) AS 'AS BRANCHABBREV', 
	 dbo.fn_FormatXMLChars(isnull(BR.LegalName ,'')) AS 'AS BRANCHLEGALNAME', 
	 dbo.fn_FormatXMLChars(case when len(BR.City) > 0 then BR.Addr1 + case when LEN(BR.Addr2) > 0 then CHAR(10) + CHAR(13) + BR.Addr2 else '' end  + CHAR(10) + CHAR(13) + BR.City + ', ' + BR.State + ' ' + BR.PostalCode else '' end) AS 'AS BRANCHADDRESS', 
	 dbo.fn_FormatXMLChars(isnull(BR.Addr1 ,'')) AS 'AS BRANCHADDR1', 
	 dbo.fn_FormatXMLChars(isnull(BR.Addr2 ,'')) AS 'AS BRANCHADDR2', 
	 dbo.fn_FormatXMLChars(isnull(BR.City ,'')) AS 'AS BRANCHCITY', 
	 dbo.fn_FormatXMLChars(isnull(BR.State ,'')) AS 'AS BRANCHSTATE', 
	 dbo.fn_FormatXMLChars(isnull(BR.PostalCode ,'')) AS 'AS BRANCHPOSTALCODE', 
	 dbo.fn_FormatPhoneNumber(BR.Phone) AS 'AS BRANCHPHONE', 
	 dbo.fn_FormatPhoneNumber(BR.Fax) AS 'AS BRANCHFAX', 
	 dbo.fn_FormatXMLChars(isnull(BR.ImageLarge,'')) AS 'AS BRANCHIMAGELARGE', 
	 dbo.fn_FormatXMLChars(isnull(BR.ImageSmall,'')) AS 'AS BRANCHIMAGESMALL', 
	 dbo.fn_FormatCurrency(OD.BreakdownAmtFunded) AS 'AS BREAKDOWNAMTFUNDED', 
	 dbo.fn_FormatCurrency(OD.BreakdownAmtInvoiced) AS 'AS BREAKDOWNAMTINVOICED', 
	 dbo.fn_FormatCurrency(OD.BreakdownBookingTotal) AS 'AS BREAKDOWNBOOKINGTOTAL', 
	 dbo.fn_FormatCurrency(OD.EquipmentTotal) AS 'AS BREAKDOWNEQTOTAL', 
	 dbo.fn_FormatCurrency(OD.PaperCost) AS 'AS BREAKDOWNFUNDINGFINANCED', 
	 case when isnull(OD.PaperRate ,0) = 0 then '' else dbo.fn_formatnumber(OD.PaperRate,5) end AS 'AS BREAKDOWNFUNDEDRATE', 
	 dbo.fn_FormatCurrency(OD.BreakdownHouse) AS 'AS BREAKDOWNHOUSE', 
	 dbo.fn_FormatXMLChars(isnull(BU.Name ,'')) AS 'AS BUSINESS', 
	 dbo.fn_FormatXMLChars(isnull(BU.Address1 ,'')) AS 'AS BUSINESSADDR1', 
	 dbo.fn_FormatXMLChars(isnull(BU.Address2 ,'')) AS 'AS BUSINESSADDR2', 
	 dbo.fn_FormatXMLChars(isnull(BU.City ,'')) AS 'AS BUSINESSCITY', 
	 dbo.fn_FormatXMLChars(isnull(BU.StateCode ,'')) AS 'AS BUSINESSSTATE', 
	 dbo.fn_FormatXMLChars(isnull(BU.PostalCode ,'')) AS 'AS BUSINESSPOSTALCODE', 
	 dbo.fn_FormatPhoneNumber(BU.Phone) AS 'AS BUSINESSPHONE', 
	 dbo.fn_FormatPhoneNumber(BU.PhoneFax) AS 'AS BUSINESSFAX', 
	 dbo.fn_FormatXMLChars(isnull(BU.ImageLarge,'')) AS 'AS BUSINESSIMAGELARGE', 
	 dbo.fn_FormatXMLChars(isnull(BU.ImageSmall,'')) AS 'AS BUSINESSIMAGESMALL', 
	 dbo.fn_FormatCurrency((SELECT SUM(ISNULL(BuyPrice,0) * Quantity) FROM SNOrderLine with (nolock) WHERE ISNULL(ServiceInd,0) = 0 AND OrderID = OD.OrderID)) AS 'AS BUYTOTAL', 
	 dbo.fn_FormatCurrency(((SELECT SUM(ISNULL(BuyPrice,0) * Quantity) FROM SNOrderLine with (nolock) WHERE ISNULL(ServiceInd,0) = 0 AND OrderID = OD.OrderID) + OD.CSMPPCTAmt)) AS 'AS BUYTOTALPCT', 
	 dbo.fn_FormatCurrency((SELECT SUM(ISNULL(EarnedCommAmt,0)) FROM SNSRCommEarned with (nolock) WHERE OrderID = OD.OrderID)) AS 'AS COMMTOTAL', 
	 dbo.fn_FormatCurrency((SELECT SUM(ISNULL(EarnedCommAmt,0)) FROM SNSRCommEarned with (nolock) WHERE OrderID = OD.OrderID AND UserID = OD.SalesRepUserID)) AS 'AS COMMPRIMARYREPTOTAL', 
	 dbo.fn_FormatXMLChars(replace(isnull(CFC.RPTName,''),'_',' ')) AS 'AS CREDITAPPFCO', 
	 dbo.fn_FormatXMLChars(case when len(isnull(CFC.RPTCity,'')) > 0 then isnull(CFC.RPTAddress1,'') + case when LEN(isnull(CFC.RPTAddress2,'')) > 0 then ' ' + isnull(CFC.RPTAddress2,'') else '' end  + ', ' +  isnull(CFC.RPTCity,'') + ', ' + isnull(CFC.RPTState,'') + ' ' + isnull(CFC.RPTZip,'') else '' end) AS 'AS CREDITAPPFCOADDRESSONELINE', 
	 dbo.fn_FormatXMLChars(isnull(CFC.RPTAddress1,'')) AS 'AS CREDITAPPFCOADDRESS1', 
	 dbo.fn_FormatXMLChars(isnull(CFC.RPTAddress2,'')) AS 'AS CREDITAPPFCOADDRESS2', 
	 dbo.fn_FormatXMLChars(isnull(CFC.RPTCity,'')) AS 'AS CREDITAPPFCOCITY', 
	 dbo.fn_FormatXMLChars(isnull(CFC.RPTState,'')) AS 'AS CREDITAPPFCOSTATE', 
	 dbo.fn_FormatXMLChars(isnull(CFC.RPTZip,'')) AS 'AS CREDITAPPFCOZIP', 
	 dbo.fn_FormatCurrency((OD.SRCommCSMPCreditValue + OD.CSMPPCTAmt)) AS 'AS CSMPAMTALL', 
	 dbo.fn_FormatXMLChars(isnull(OD.SRCommCSMPContractNbr,'')) AS 'AS CSMPCONTRACT', 
	 dbo.fn_FormatCurrency(OD.SRCommCSMPCreditValue) AS 'AS CSMPCREDITAMT', 
	 case when OD.SRCommCSMPLevelID = -100 then 'Custom' else case when  OD.SRCommCSMPLevelID = -102 then 'Strategic' else dbo.fn_FormatXMLChars(isnull(CSMP.LevelName,'')) end end  AS 'AS CSMPCREDITNAME', 
	 case when isnull(OD.CurrentMonthlyCost,0) = 0 then '' else dbo.fn_FormatCurrency(isnull(OD.CurrentMonthlyCost,0)) end AS 'AS CURRENTMONTHLYCOST', 
	 dbo.fn_FormatXMLChars(isnull(OD.CustomerPO,'')) AS 'AS CUSTOMERPO', 
	 case when isnull(OD.CustomerUpgradeind,0) = -1 then 'X' else '' end AS 'AS CUSTOMERUPGRADEX', 
	 dbo.fn_FormatXMLChars(isnull(OD.Dear,'')) AS 'AS DEAR', 
	 case when isnull(OD.ElevatorInd,0) = -1 then 'X' else '' end AS 'AS DELIVERYFEEELEVATORX', 
	 dbo.fn_formatnumber(OD.DeliveryNbrFloors,0) AS 'AS DELIVERYFEENBRFLOORS', 
	 dbo.fn_FormatXMLChars(isnull((select stuff((select '; ' + isnull(Method,'') from SNDeliveryJob with (nolock) where OrderID = OD.OrderID order by DeliveryJobCount for xml path('')),1,2,'')),'')) AS 'AS DELIVERYMETHOD', 
	 dbo.fn_FormatCurrency(isnull(OD.DMTotalAddFeesAmt,0)) AS 'AS DMACCESSORYPRICE', 
	 dbo.fn_FormatCurrency(isnull(OD.DMDownPaymentAmt,0)) AS 'AS DMDOWNPAYMENT', 
	 dbo.fn_FormatDate(OD.DTClosed,3,0,0) AS 'AS DMDOWNPAYMENTDT', 
	 dbo.fn_FormatXMLChars(isnull(DMB.Name,'')) AS 'AS DMPAYMENTTERM', 
	 dbo.fn_FormatCurrency(isnull(OD.DMTotalServicesAmt,0)) AS 'AS DMPRIMARYPRICE', 
	 dbo.fn_FormatCurrency(isnull(OD.DMTotalSalesTaxAmt,0)) AS 'AS DMSALESTAX', 
	 dbo.fn_FormatCurrency(isnull(OD.DMTotalOrderAmt,0)) AS 'AS DMSUBTOTAL', 
	 dbo.fn_FormatCurrency(isnull((select sum(case when s.Type = 'P' then l.TotalSellAmt else 0 end) from SNOrderDMLine l with (nolock) join SNDMServices s with (nolock) on s.DMServiceID = l.DMServiceID where l.OrderID = OD.OrderID),0)) AS 'AS DMSUMSERVICES', 
	 dbo.fn_FormatCurrency(isnull((select sum(case when s.Type <> 'P' then l.TotalSellAmt else 0 end) from SNOrderDMLine l with (nolock) join SNDMServices s with (nolock) on s.DMServiceID = l.DMServiceID where l.OrderID = OD.OrderID),0)) AS 'AS DMSUMFEES', 
	 dbo.fn_FormatCurrency(isnull(OD.DMTotalSalesTaxAmt,0) + isnull(OD.DMTotalOrderAmt,0)) AS 'AS DMTOTAL', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(LP.DocFee,0))  end AS 'AS DOCFEE', 
	 cast(datepart(dd,OD.DTClosed) as nvarchar) AS 'AS DTCDAY', 
	 cast(datepart(mm,OD.DTClosed) as nvarchar) AS 'AS DTCMONTH', 
	 datename(mm,OD.DTClosed) AS 'AS DTCMONTHNAME', 
	 dbo.fn_FormatDate(OD.DTClosed,3,0,0)  AS 'AS DTCLOSED', 
	 cast(datepart(yy,OD.DTClosed) as nvarchar) AS 'AS DTCYEAR', 
	 dbo.fn_FormatDate(PR.DTProposal,3,0,0)  AS 'AS DTPROPOSAL', 
	 case when isnull(LP.isEOT_FixedPCT,0) = -1 then 'X' else '' end AS 'AS EOTFIXPCTX', 
	 case when isnull(LP.isEOT_FMV,0) = -1 then 'X' else '' end AS 'AS EOTFMVX', 
	 case when isnull(LP.isEOT_FMV,0) = -1 then 'FMV' else case when isnull(LP.isEOT_BuckOut,0) = -1 then '$Out' else case when isnull(LP.isEOT_FixedPCT,0) = -1 then 'Fixed PCT' else case when isnull(LP.isEOT_NoOption,0) = -1 then 'No Option' else '' end end end end AS 'AS EOTOPTION', 
	 case when isnull(LP.isEOT_BuckOut,0) = -1 then 'X' else '' end AS 'AS EOTOUTX', 
	 dbo.fn_FormatDate(PR.DTExpectedClose,3,0,0)  AS 'AS EXPCLOSEDT', 
	 dbo.fn_FormatDate(OD.FCOApprovedDT,3,0,0)  AS 'AS FCOAPPAPPROVEDATE', 
	 dbo.fn_FormatXMLChars(isnull(OD.FCOAppNbr ,'')) AS 'AS FCOAPPNBR', 
	 dbo.fn_FormatDate(OD.FCOApprovalValidThruDT,3,0,0)  AS 'AS FCOAPPRVALIDTHRUDATE', 
	 dbo.fn_FormatDate(OD.FCOApplicationDT,3,0,0)  AS 'AS FCOAPPLDATE', 
	 dbo.fn_FormatXMLChars(cast(isnull(OD.FCOConditions ,'') as nvarchar(max))) AS 'AS FCOAPPRCONDITIONS', 
	 dbo.fn_FormatXMLChars(isnull(FC.RPTAddress1,'')) AS 'AS FCOADDRESS1', 
	 dbo.fn_FormatXMLChars(isnull(FC.RPTAddress2,'')) AS 'AS FCOADDRESS2', 
	 dbo.fn_FormatXMLChars(isnull(FC.RPTCity,'')) AS 'AS FCOCITY', 
	 dbo.fn_FormatXMLChars(isnull(FC.RPTState,'')) AS 'AS FCOSTATE', 
	 dbo.fn_FormatXMLChars(isnull(FC.RPTZip,'')) AS 'AS FCOZIP', 
	 dbo.fn_FormatPhoneNumber(FC.AppPhoneNbr) AS 'AS FCOPHONENBR', 
	 dbo.fn_FormatXMLChars(case when isnull(OD.FCOLegalName,'') = '' then case when isnull(OD.BillingCustomerName,'') = '' then  isnull(BCU.RPTName ,'') else OD.BillingCustomerName end else OD.FCOLegalName end) AS 'AS FCOLEGALNAME', 
	 dbo.fn_FormatXMLChars(isnull(OD.FCOLegalName ,'')) AS 'AS FCOLEGALNAMEASIS', 
	 dbo.fn_FormatXMLChars(replace(isnull(CO.Name,''),'_',' ')) AS 'AS FCONAME', 
	 cast(datepart(dd,getdate()) as nvarchar) AS 'AS GENDAY', 
	 cast(datepart(mm,getdate()) as nvarchar) AS 'AS GENMONTH', 
	 datename(mm,getdate()) AS 'AS GENMONTHNAME', 
	 cast(datepart(yy,getdate()) as nvarchar) AS 'AS GENYEAR', 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and OwnershipInd = 'C') then 'X' else '' end AS 'AS HASCUSTOMEREQX', 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and isnull(OwnershipInd,'D') = 'D' and BPProductCategoryID not in (select ProductCategoryID from SNProductCategory with (nolock) where isnull(IsNotMachine,0) = -1)) then 'X' else '' end AS 'AS HASDEALEREQX', 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and isnull(OwnershipInd,'') = 'D' and BPProductCategoryID not in (select ProductCategoryID from SNProductCategory with (nolock) where isnull(IsNotMachine,0) = -1)) then 'Existing EQ' else '' end AS 'AS HASEXISTINGEQLABEL', 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and isnull(OwnershipInd,'') = 'D' and BPProductCategoryID not in (select ProductCategoryID from SNProductCategory with (nolock) where isnull(IsNotMachine,0) = -1)) then 'X' else '' end AS 'AS HASEXISTINGEQX', 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and isnull(OwnershipInd,'') = '' and isnull(ServiceInd,0) = 0) then 'X' else '' end AS 'AS HASNEWEQX', 
	 case when exists(select * from SNOBDServiceLine with (nolock) where OBDID = OD.OrderID) then 'X' else '' end AS 'AS HASSERVICEX', 
	 case when isnull(BT.IncludeInLease,0) = -1 then case when exists(select * from SNOBDServiceLine with (nolock) where OBDID = OD.OrderID) then 'X' else '' end else '' end AS 'AS HASSERVICEXPTONLY', 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and BPProductCategoryID in (select ProductCategoryID from SNProductCategory with (nolock) where isnull(IsNotMachine,0) = -1)) then 'X' else '' end AS 'AS HASSOFTWAREX', 
	 case when exists(select * from SNOrderLine with (nolock) where OrderID = OD.OrderID and isnull(Condition,'') = 'U') then 'X' else '' end AS 'AS HASUSEDEQX', 
	  dbo.fn_FormatXMLChars(isnull((select top 1 isnull(pr.FirstName,'') + ' ' + case when isnull(pr.MiddleName,'') <> '' then pr.MiddleName + ' ' else '' end + isnull(pr.LastName,'') from SNUser u with (nolock) join SNHierarchyNode p with (nolock) on p.ObjectKey = u.UserID join SNHierarchyNode c with (nolock) on c.ParentHierarchyNodeID = p.HierarchyNodeID join SNPerson pr with (nolock) on pr.PersonID = u.PersonID where c.ObjectKey = OD.SalesRepUserID),isnull(SMP.FirstName,'') + ' ' + case when isnull(SMP.MiddleName,'') <> '' then  SMP.MiddleName + ' ' else '' end + isnull(SMP.LastName,''))) AS 'AS IMMEDIATEMANAGERNAME', 
	 dbo.fn_FormatCurrency(isnull(OD.ITPTotalDealerCostAmt,0)) AS 'AS ITPDEALERCOST', 
	 dbo.fn_FormatCurrency(isnull(OD.ITPDownPaymentAmt,0)) AS 'AS ITPDOWNPAYMENT', 
	 dbo.fn_FormatDate(OD.DTClosed,3,0,0) AS 'AS ITPDOWNPAYMENTDT', 
	 dbo.fn_FormatCurrency(isnull(OD.ITPTotalGP,0)) AS 'AS ITPGP', 
	 dbo.fn_FormatCurrency(case when isnull(IPB.IsInLeaseInd,0) = -1 then isnull(OD.LeaseFactor ,0) * isnull(OD.ITPTotalSellAmt,0) else isnull(OD.ITPTotalSellAmt,0) end) AS 'AS ITPPAYMENT', 
	 dbo.fn_FormatXMLChars(isnull(IPB.Name,'')) AS 'AS ITPPAYMENTTERM', 
	 dbo.fn_FormatNumber(OD.ITPTotalGPPCT * 100,2) + '%' AS 'AS ITPTOTALGPPCT', 
	 dbo.fn_FormatCurrency(isnull(OD.ITPTotalRepCostAmt,0)) AS 'AS ITPREPCOST', 
	 dbo.fn_FormatCurrency(isnull(OD.ITPTotalSellAmt,0)) AS 'AS ITPSELLCOST', 
	 case when isnull(OD.LeaseACHInd,0) = -1 then 'X' else '' end AS 'AS LEASEACHX', 
	 case when isnull(OD.LeaseACHInd,0) = -1 then '' else 'X' end AS 'AS LEASEACHXNO', 
	 dbo.fn_FormatXMLChars(isnull(OD.LeaseACHBankAcctNbr ,'')) AS 'AS LEASEACHBANKACCTNBR', 
	 dbo.fn_FormatXMLChars(isnull(OD.LeaseACHBankRouteNbr ,'')) AS 'AS LEASEACHBANKROUTENBR', 
	 dbo.fn_FormatXMLChars(isnull(stuff((select ', ' + Name from SNLeaseAdjustType with (nolock) where ',' + isnull(OD.ActiveLeaseAdjustTypeIDs,'') + ',' like '%,' + cast(LeaseAdjustTypeID as nvarchar) + ',%' for xml path('')),1,2,''),'')) AS 'AS LEASEADJUSTTYPES', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else isnull(nullif(dbo.fn_formatnumber((select RateFactor from SNLeasePrice with (nolock) where LeasePriceID = OD.LeaseFactorSelect),5),'0.00000'),'') end AS 'AS LEASEBASEFACTOR', 
	 dbo.fn_FormatDate(OD.LeaseCommenceDT,3,0,0) AS 'AS LEASECOMMENCEDT', 
	 case when isnull(OD.isDCAInd,0) = -1 then 'X' else '' end AS 'AS LEASEDCAX', 
	 case when isnull(OD.isDCAInd,0) = -1 then '' else 'X' end AS 'AS LEASEDCAXNO', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.LeaseFactor ,0) = 0 then '' else cast(OD.LeaseFactor as nvarchar) end end AS 'AS LEASEFACTOR', 
	 dbo.fn_FormatDate(OD.LeaseFirstPymtDueDT,3,0,0) AS 'AS LEASEFIRSTPYMTDUEDT', 
	 dbo.fn_FormatDate(OD.LeaseFirstUsageDT,3,0,0) AS 'AS LEASEFIRSTUSAGEDT', 
	 substring(dbo.fn_FormatDate(OD.LeaseFirstUsageDT,3,0,0),1,5) + ' - ' + substring(dbo.fn_FormatDate(OD.LeaseFirstPymtDueDT,3,0,0),1,5) AS 'AS LEASEFIRSTUSAGEPERIOD', 
	 dbo.fn_formatnumber(isnull(OD.NbrInterimRentDays,0),0) AS 'AS LEASEINTERIMDAYS', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0))  end AS 'AS LEASEINTERIMEQPERDIEM', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0) * isnull(OD.NbrInterimRentDays,0)) * .25)  end AS 'AS LEASEINTERIMEQ25RENT', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0) * isnull(OD.NbrInterimRentDays,0))  end AS 'AS LEASEINTERIMEQRENT', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(round(isnull(OD.PaymentAmtMonthlyFin,0) / 30, 2),0))  end AS 'AS LEASEINTERIMPERDIEM', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0) + isnull(round((isnull(OD.PaymentAmtMonthlyFin,0) / 30) - ((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30), 2),0)) * isnull(OD.NbrInterimRentDays,0))  end AS 'AS LEASEINTERIMRENT', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(((isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0) + isnull(round((isnull(OD.PaymentAmtMonthlyFin,0) / 30) - ((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30), 2),0)) * isnull(OD.NbrInterimRentDays,0)) - round(((isnull(round((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30, 2),0) * isnull(OD.NbrInterimRentDays,0)) * .25),2))  end AS 'AS LEASEINTERIMRENTLESS25', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(round((isnull(OD.PaymentAmtMonthlyFin,0) / 30) - ((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30), 2),0))  end AS 'AS LEASEINTERIMSVCPERDIEM', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(isnull(round((isnull(OD.PaymentAmtMonthlyFin,0) / 30) - ((isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) / 30), 2),0) * isnull(OD.NbrInterimRentDays,0))  end AS 'AS LEASEINTERIMSVCRENT', 
	 dbo.fn_FormatDate(OD.InstallDT,3,0,0) AS 'AS LEASEINSTALLDT', 
	 dbo.fn_FormatXMLChars(isnull(OD.LeaseMasterAgreementNbr ,'')) AS 'AS LEASEMASTERAGREEMENTNBR', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatXMLChars(isnull(LPL.Name,'')) end AS 'AS LEASEPRICELEVEL', 
	 dbo.fn_FormatXMLChars(isnull(LP.Name ,'')) AS 'AS LEASEPRODUCT', 
	 dbo.fn_FormatXMLChars(case when isnull(SBT.FundedInLeaseInd,0) = -1 or isnull(IPB.IsInLeaseInd,0) = -1 or isnull(BTB.IsInLeaseInd,0) = -1 or isnull(DMB.IsInLeaseInd,0) = -1 then '* Payment includes ' + case when isnull(SBT.FundedInLeaseInd,0) = -1 then 'IT Services' else '' end + case when isnull(IPB.IsInLeaseInd,0) = -1 then case when isnull(SBT.FundedInLeaseInd,0) = -1 then ' and ' else '' end + 'IT Products' else '' end + case when isnull(BTB.IsInLeaseInd,0) = -1 then case when isnull(SBT.FundedInLeaseInd,0) = -1 or isnull(IPB.IsInLeaseInd,0) = -1 then ' and ' else '' end + 'Block of Time' else '' end + case when isnull(DMB.IsInLeaseInd,0) = -1 then case when isnull(SBT.FundedInLeaseInd,0) = -1 or isnull(IPB.IsInLeaseInd,0) = -1 or isnull(BTB.IsInLeaseInd,0) = -1 then ' and ' else '' end + 'Document Management' else '' end else '' end) AS 'AS LEASEPYMTINCLUDES', 
	 dbo.fn_FormatXMLChars(isnull(OD.LeaseScheduleNbr ,'')) AS 'AS LEASESCHEDULENBR', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(case when BT.IncludeInLease = -1 then isnull(OD.MaintMonthValueActual,0) else 0 end)  end AS 'AS LEASESERVICEPAYMENT', 
	 dbo.fn_FormatCurrency(isnull(OD.LeaseSecurityDepAmt,0)) AS 'AS LEASESECURITYDEPAMT', 
	 case when isnull(OD.isTaxExemptInd,0) = -1 then 'X' else '' end AS 'AS LEASETAXEXEMPTX', 
	 case when isnull(OD.isTaxExemptInd,0) = -1 then '' else 'X' end AS 'AS LEASETAXEXEMPTXNO', 
	 case when isnull(OD.isTaxExemptInd,0) = -1 then 'Yes' else 'No' end AS 'AS LEASETAXEXEMPTYESNO', 
	 dbo.fn_FormatCurrency(OD.MaintBasePayment) AS 'AS MAINTBASEPAYMENT', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatCurrency(OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) end AS 'AS MAINTBASEPAYMENTY2', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatCurrency((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) end AS 'AS MAINTBASEPAYMENTY3', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatCurrency(((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100)) end AS 'AS MAINTBASEPAYMENTY4', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatCurrency((((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100)) * (OD.SPM_Y5EscalatePCT / 100)) end AS 'AS MAINTBASEPAYMENTY5', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatCurrency(((((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100)) * (OD.SPM_Y5EscalatePCT / 100)) * (OD.SPM_Y6EscalatePCT / 100)) end AS 'AS MAINTBASEPAYMENTY6', 
	 dbo.fn_FormatCurrency(OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) AS 'AS MAINTBASEPAYMENTY2PROJECTED', 
	 dbo.fn_FormatCurrency((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) AS 'AS MAINTBASEPAYMENTY3PROJECTED', 
	 dbo.fn_FormatCurrency(((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100)) AS 'AS MAINTBASEPAYMENTY4PROJECTED', 
	 dbo.fn_FormatCurrency((((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100)) * (CT.Y5EscalatePCT / 100)) AS 'AS MAINTBASEPAYMENTY5PROJECTED', 
	 dbo.fn_FormatCurrency(((((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100)) * (CT.Y5EscalatePCT / 100)) * (CT.Y6EscalatePCT / 100)) AS 'AS MAINTBASEPAYMENTY6PROJECTED', 
	 dbo.fn_FormatXMLChars(isnull(BT.Name,'')) AS 'AS MAINTBILLINGCYCLE', 
	 dbo.fn_FormatXMLChars(case when isnull(BT.IncludeInLease,0) = -1 then case LP.PaymentFrequency when 1 then 'Annually' when 2 then 'Semi-Annually' when 4 then 'Quarterly' else 'Monthly' end else isnull(BT.Name,'') end) AS 'AS MAINTBILLINGCYCLELEASE', 
	 dbo.fn_FormatXMLChars(isnull(BT.OtherName,'')) AS 'AS MAINTBILLINGCYCLEOTHER', 
	 dbo.fn_FormatXMLChars(upper(isnull(BT.OtherName,''))) AS 'AS MAINTBILLINGCYCLEOTHERCAPS', 
	 dbo.fn_FormatXMLChars(isnull(CT.Description,'')) AS 'AS MAINTCONTRACTDESC', 
	 dbo.fn_FormatXMLChars(isnull(CT.LegalText,'')) AS 'AS MAINTCONTRACTLEGALTEXT', 
	 dbo.fn_FormatXMLChars(isnull(CT.Name,'')) AS 'AS MAINTCONTRACTTYPE', 
	 (case when OD.MaintStartDateV2 > 2 then dbo.fn_FormatDate(DATEADD(M,OD.MaintNumMonths,DATEADD(D,OD.MaintStartDateV2,'12/30/1899')),3,0,0) else '' end)  AS 'AS MAINTENDDATEV2', 
	 dbo.fn_FormatCurrency((select sum(BundleQuantity * FixedAmount) from SNOrderLine with (nolock) where OrderID = OD.OrderID)) AS 'AS MAINTFIXEDANNUAL', 
	 cast(isnull(OD.MaintNumMonths ,'') as nvarchar) AS 'AS MAINTNUMMONTHS', 
	 dbo.fn_FormatXMLChars(case when OD.MaintOverBillingCycle = -1 then isnull(BT.Name,'') else isnull(OBT.Name,'') end) AS 'AS MAINTOVERBILLINGCYCLE', 
	 dbo.fn_FormatXMLChars(case when OD.MaintOverBillingCycle = -1 then isnull(BT.OtherName,'') else isnull(OBT.OtherName,'') end) AS 'AS MAINTOVERBILLINGCYCLEOTHER', 
	 dbo.fn_FormatXMLChars(upper(case when OD.MaintOverBillingCycle = -1 then isnull(BT.OtherName,'') else isnull(OBT.OtherName,'') end)) AS 'AS MAINTOVERBILLINGCYCLEOTHERCAPS', 
	 dbo.fn_FormatDate(OD.MaintStartDate,3,0,0) AS 'AS MAINTSTARTDATE', 
	 (case when OD.MaintStartDateV2 > 1 then dbo.fn_FormatDate(DATEADD(D,OD.MaintStartDateV2,'12/30/1899'),3,0,0) else '' end)  AS 'AS MAINTSTARTDATEV2', 
	 (case when OD.MaintStartDateV2 > 1 then dbo.fn_FormatDate(DATEADD(D,OD.MaintStartDateV2,'12/30/1899'),3,0,0) else 'Install Date' end)  AS 'AS MAINTSTARTDATEV2METRO', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatDate(dateadd(yy,1,OD.MaintStartDate),3,0,0) end AS 'AS MAINTSTARTDATEY2', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatDate(dateadd(yy,2,OD.MaintStartDate),3,0,0) end AS 'AS MAINTSTARTDATEY3', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatDate(dateadd(yy,3,OD.MaintStartDate),3,0,0) end AS 'AS MAINTSTARTDATEY4', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatDate(dateadd(yy,4,OD.MaintStartDate),3,0,0) end AS 'AS MAINTSTARTDATEY5', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else dbo.fn_FormatDate(dateadd(yy,5,OD.MaintStartDate),3,0,0) end AS 'AS MAINTSTARTDATEY6', 
	 dbo.fn_FormatDate(dateadd(yy,1,OD.MaintStartDate),3,0,0) AS 'AS MAINTSTARTDATEY2PROJECTED', 
	 dbo.fn_FormatDate(dateadd(yy,2,OD.MaintStartDate),3,0,0) AS 'AS MAINTSTARTDATEY3PROJECTED', 
	 dbo.fn_FormatDate(dateadd(yy,3,OD.MaintStartDate),3,0,0) AS 'AS MAINTSTARTDATEY4PROJECTED', 
	 dbo.fn_FormatDate(dateadd(yy,4,OD.MaintStartDate),3,0,0) AS 'AS MAINTSTARTDATEY5PROJECTED', 
	 dbo.fn_FormatDate(dateadd(yy,5,OD.MaintStartDate),3,0,0) AS 'AS MAINTSTARTDATEY6PROJECTED', 
	 dbo.fn_FormatCurrency(OD.MaintBasePayment * (12/isnull(BT.PaymentsPerYear,12))) AS 'AS MAINTTOTALBASEPAYMENT', 
	 case when isnull(OD.ApprovedByUserID,-1) < 0 then '' else case isnull(OD.ManagerApproved,0) when 1 then 'Approved By Manager' when 2 then 'Declined By Manager' else 'No Action By Manager' end + '(' + dbo.fn_FormatXMLChars((select isnull(cPR.FirstName,'') + ' ' + case when isnull(cPR.MiddleName,'') <> '' then cPR.MiddleName + ' ' else '' end + isnull(cPR.LastName,'') from SNUser cUS with (nolock) join SNPerson cPR with (nolock) on cPR.PersonID = cUS.PersonID where cUS.UserID = OD.ApprovedByUserID)) + ')' end AS 'AS MGRAPPROVEDLABEL', 
	 case when isnull(OD.IsMNSInd,0) = -1 then 'Yes' else 'No' end AS 'AS MNSINDYESNO', 
	 case when isnull(OD.IsMNSInd,0) = -1 then 'X' else '' end AS 'AS MNSINDYESX', 
	 case when isnull(OD.IsMPSInd,0) = -1 then 'Yes' else 'No' end AS 'AS MPSINDYESNO', 
	 case when isnull(OD.IsMPSInd,0) = -1 then 'X' else '' end AS 'AS MPSINDYESX', 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrLeasePymts,0) = 0 then '' else cast(OD.NbrLeasePymts as nvarchar) end end AS 'AS NBRLEASEPYMTS', 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrLeasePymts,0) = 0 then '' else cast((isnull(LP.PaymentFrequency,12) * OD.NbrLeasePymts)/12 as nvarchar) end end AS 'AS NBRLEASEPYMTSCAN', 
	 case when isnull(OD.NbrLeasePymts + OD.NbrDeferredPymts,0) = 0 then '' else cast((OD.NbrLeasePymts + OD.NbrDeferredPymts) as nvarchar) end AS 'AS NBRPYMTSNBRDEF', 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrDeferredPymts,0) = 0 then case when isnull(OD.LeaseOverride,0) = -1 then dbo.fn_FormatNumber(isnull(OD.OverrideLeaseTerm,0),0) else case when isnull(OD.PaymentNbrFin,0) = 0 then '' else dbo.fn_FormatNumber(isnull(OD.NbrLeasePymts,0),0) end end else dbo.fn_FormatNumber(isnull(OD.NbrDeferredPymts,0),0) + ' @' + char(13) + case when isnull(OD.LeaseOverride,0) = -1 then dbo.fn_FormatNumber(isnull(OD.OverrideLeaseTerm,0) - isnull(OD.NbrDeferredPymts,0),0) else dbo.fn_FormatNumber(isnull(OD.PaymentNbrFin,0) - isnull(OD.NbrDeferredPymts,0),0) end + ' @' end end AS 'AS NBRPYMTSTBLW', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 
                    then '' 
                    else case when isnull(OD.NbrDeferredPymts,0) = 0 and isnull(LP.isDefStep,0) = 0 
                                then case when OD.PaymentAmtMonthlyFin = 0 then '' 
                                        else case when isnull(BT.IncludeInLease,0) = -1 
                                                    then dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) 
                                                    else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) 
                                            end 
                                    end 
                            when isnull(OD.NbrDeferredPymts,0) <> 0 and isnull(LP.isDefStep,0) = 0  
                                then '$0.00' + char(13) + case when isnull(BT.IncludeInLease,0) = -1  
                                                                then dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) 
                                                            else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) 
                                                        end 
                            when isnull(OD.NbrDeferredPymts,0) = 0 and isnull(LP.isDefStep,0) <> 0 
                                then cast(LP.DS1NbrPymts as nvarchar) + ' @ ' +  dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0) * LP.DS1PCTPymt) 
                                    + case when LP.DS2NbrPymts > 0 
                                            then ' then ' + case when LP.DS3NbrPymts > 0 
                                                                    then cast(LP.DS2NbrPymts as nvarchar) 
                                                                else cast(OD.NbrLeasePymts - LP.DS1NbrPymts as nvarchar)
                                                            end + ' @ ' +  dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0) * LP.DS2PCTPymt) 
                                            else '' 
                                    end 
                                    + case when LP.DS3NbrPymts > 0 
                                            then ' then ' + cast(OD.NbrLeasePymts - (LP.DS1NbrPymts + LP.DS2NbrPymts) as nvarchar) + ' @ ' 
                                                +  dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0) * LP.DS3PCTPymt) 
                                            else '' 
                                    end 
                            else '' 
                        end 
            end 
            AS 'AS DSLSPYMTSUM', 
	 case when isnull(OD.NewCustomerInd,0) = -1 then 'Yes' else 'No' end AS 'AS NEWCUSTOMER', 
	 case when isnull(OD.NewCustomerInd,0) = -1 then 'X' else '' end AS 'AS NEWCUSTOMERX', 
	 case when isnull(OD.NewPlacementInd,0) = -1 then 'X' else '' end AS 'AS NEWPLACEMENTX', 
	 dbo.fn_FormatXMLChars(ISNULL(cast(OD.Note as nvarchar(max)),'')) AS 'AS NOTE', 
	 dbo.fn_formatnumber(isnull((select sum(Quantity) from SNOrderLine with (nolock) where OrderID = OD.OrderID and isPrimaryInd = -1),0),0) AS 'AS NUMMACHINECFG', 
	 cast(OD.OrderID as nvarchar) AS 'AS ORDERID', 
	 case when OD.MaintOverBillingCycle = -1 and BT.PaymentsPerYear = 1 then 'X' else case when OBT.PaymentsPerYear = 1 then 'X'  else '' end end AS 'AS OVEBILLFREQANX', 
	 case when OD.MaintOverBillingCycle = -1 and BT.PaymentsPerYear = 12 then 'X' else case when OBT.PaymentsPerYear = 12 then 'X'  else '' end end AS 'AS OVEBILLFREQMOX', 
	 case when OD.MaintOverBillingCycle = -1 and BT.PaymentsPerYear = 4 then 'X' else case when OBT.PaymentsPerYear = 4 then 'X'  else '' end end AS 'AS OVEBILLFREQQTRX', 
	 case when OD.MaintOverBillingCycle = -1 and BT.PaymentsPerYear = 2 then 'X' else case when OBT.PaymentsPerYear = 2 then 'X'  else '' end end AS 'AS OVEBILLFREQSAX', 
	 dbo.fn_FormatCurrency(OD.MaintTotalChargeback) AS 'AS OVERRIDECHARGEBACK', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end AS 'AS PAYMENTAMTMONTHLYFIN', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else replace(dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin),'$','') end AS 'AS PAYMENTAMTMONTHLYFINNOSIGN', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100))) end end AS 'AS PAYMENTAMTMONTHLYFINY2', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + ((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100))) end end AS 'AS PAYMENTAMTMONTHLYFINY3', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100))) end end AS 'AS PAYMENTAMTMONTHLYFINY4', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + ((((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100)) * (OD.SPM_Y5EscalatePCT / 100))) end end AS 'AS PAYMENTAMTMONTHLYFINY5', 
	 case when isnull(OD.SPM_BlendEscInd,0) = -1 then '' else case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (((((OD.MaintBasePayment * (OD.SPM_Y2EscalatePCT / 100)) * (OD.SPM_Y3EscalatePCT / 100)) * (OD.SPM_Y4EscalatePCT / 100)) * (OD.SPM_Y5EscalatePCT / 100)) * (OD.SPM_Y6EscalatePCT / 100))) end end AS 'AS PAYMENTAMTMONTHLYFINY6', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (OD.MaintBasePayment * (CT.Y2EscalatePCT / 100))) end AS 'AS PAYMENTAMTMONTHLYFINY2PROJECTED', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + ((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100))) end AS 'AS PAYMENTAMTMONTHLYFINY3PROJECTED', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100))) end AS 'AS PAYMENTAMTMONTHLYFINY4PROJECTED', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + ((((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100)) * (CT.Y5EscalatePCT / 100))) end AS 'AS PAYMENTAMTMONTHLYFINY5PROJECTED', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((OD.AmtFinanced * OD.LeaseFactor) + (((((OD.MaintBasePayment * (CT.Y2EscalatePCT / 100)) * (CT.Y3EscalatePCT / 100)) * (CT.Y4EscalatePCT / 100)) * (CT.Y5EscalatePCT / 100)) * (CT.Y6EscalatePCT / 100))) end AS 'AS PAYMENTAMTMONTHLYFINY6PROJECTED', 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when (isnull(OD.AmtFinanced ,0) * isnull(OD.LeaseFactor ,0)) + OD.MaintBasePayment = 0 then '' else dbo.fn_FormatCurrency((isnull(OD.AmtFinanced ,0) * isnull(OD.LeaseFactor ,0)) + OD.MaintBasePayment) end end AS 'AS PAYMENTAMTMONTHLYFINWITHSERVICE', 
	 case when isnull(OD.LeaseOverride,0) = -1 then cast(isnull(OD.OverrideLeaseTerm,0) as nvarchar) else case when isnull(OD.PaymentNbrFin ,0) = 0 then '' else cast(OD.PaymentNbrFin as nvarchar) end end AS 'AS PAYMENTNBRFIN', 
	 case when isnull(OD.LeaseOverride,0) = -1 then cast(isnull(OD.OverrideLeaseTerm - 1,0) as nvarchar) else case when isnull(OD.PaymentNbrFin ,0) = 0 then '' else cast(OD.PaymentNbrFin - 1 as nvarchar) end end AS 'AS PAYMENTNBRFINMINUSONE', 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when BT.IncludeInLease = -1 then case when OD.PaymentAmtMonthlyFin + OD.MaintBasePayment = 0 then '' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin + OD.MaintBasePayment) end else case when OD.PaymentAmtMonthlyFin = 0 then '' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end end AS 'AS PAYMENTWITHSERVICE', 
	 case when ST.IsLeased = 0 and OD.SaleTypeID > 0 then 'n/a' else case when BT.FundedInLeaseInd = -1 then case when OD.PaymentAmtMonthlyFin + OD.MaintBasePayment = 0 then '' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin + OD.MaintBasePayment) end else case when OD.PaymentAmtMonthlyFin = 0 then '' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end end AS 'AS PAYMENTFUNDEDWITHSERVICE', 
	 dbo.fn_FormatCurrency(OD.PBChargeBackAmt) AS 'AS PBCHARGEBACK', 
	 case when isnull(OD.PricingMethod,0) <> 0 then 'Pricing is Non Conforming - ' else '' end AS 'AS PRICECONFORM', 
	 dbo.fn_FormatXMLChars(isnull(PL.Name ,'')) AS 'AS PRICELEVEL', 
	 dbo.fn_FormatXMLChars(isnull(PL.Description ,'')) AS 'AS PRICELEVELDESCRIPTION', 
	 dbo.fn_FormatXMLChars(isnull(PL.LegalText ,'')) AS 'AS PRICELEVELLEGALTEXT', 
	 case isnull(OD.PricingMethod,0) when 0 then 'Point Book' when 1 then 'Promo/Special' when 2 then 'Bid Desk' when 3 then 'Branch Manager' when 4 then 'Double Contest' else '' end AS 'AS PRICEMETHOD', 
	 dbo.fn_FormatXMLChars(isnull(OD.ProposalName,'')) AS 'AS PROPOSALNAME', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.PS24MoPymt) end AS 'AS PS24MOPYMT', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.PS36MoPymt) end AS 'AS PS36MOPYMT', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.PS48MoPymt) end AS 'AS PS48MOPYMT', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency(OD.PS60MoPymt) end AS 'AS PS60MOPYMT', 
	 case when LP.PaymentFrequency = 1 then 'X' else '' end AS 'AS PYMTFREQANX', 
	 case when LP.PaymentFrequency = 12 then 'Monthly' else
                                    case when LP.PaymentFrequency = 4 then 'Quarterly' else
                                    case when LP.PaymentFrequency = 2 then 'Semi-Annual' else
                                    case when LP.PaymentFrequency = 1 then 'Annual' else '??Unknown' end end end end AS 'AS PYMTFREQLONG', 
	 case when LP.PaymentFrequency = 12 then 'X' else '' end AS 'AS PYMTFREQMOX', 
	 case when LP.PaymentFrequency = 4 then 'X' else '' end AS 'AS PYMTFREQQTRX', 
	 case when LP.PaymentFrequency = 2 then 'X' else '' end AS 'AS PYMTFREQSAX', 
	 case when LP.PaymentFrequency = 12 then 'MO' else
                                    case when LP.PaymentFrequency = 4 then 'QT' else
                                    case when LP.PaymentFrequency = 2 then 'SA' else
                                    case when LP.PaymentFrequency = 1 then 'AN' else '??' end end end end AS 'AS PYMTFREQSHORT', 
	 dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin + (select sum(isnull(BundleQuantity,1) * isnull(MonthlyMeter,0)) from SNOrderLine with (nolock) where OrderID = OD.OrderID)) AS 'AS PYMTPLUSSERVPLUSPM', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrDeferredPymts,0) = 0 then case when OD.PaymentAmtMonthlyFin = 0 then '' else case when isnull(BT.IncludeInLease,0) = -1 then dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end else '$0.00' + char(13) + case when isnull(BT.IncludeInLease,0) = -1 then dbo.fn_FormatCurrency(isnull(OD.AmtFinanced,0) * isnull(OD.LeaseFactor,0)) else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end end AS 'AS PYMTSTBL', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrDeferredPymts,0) > 0 then cast(isnull(OD.NbrDeferredPymts,0) as nvarchar) + ' @ $0.00' + char(13) + cast(OD.NbrLeasePymts - isnull(OD.NbrDeferredPymts,0) as nvarchar) + ' @ ' + dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) else cast(OD.NbrLeasePymts as nvarchar) + ' @ ' + dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end AS 'AS PYMTSTBLDEF', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else case when isnull(OD.NbrDeferredPymts,0) = 0 then case when OD.PaymentAmtMonthlyFin = 0 then '' else dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end else '$0.00' + char(13) + dbo.fn_FormatCurrency(OD.PaymentAmtMonthlyFin) end end AS 'AS PYMTSTBLTOTAL', 
	 dbo.fn_FormatCurrency((select sum(BuyPrice * Quantity) from SNOrderLine with (nolock) where OrderID = OD.OrderID) + (select sum(case when isnull(oat.IsSoftCost,0) = -1 then case when oat.CreditDebitInd = 'C' then -1 * oa.AdjAmount else oa.AdjAmount end else 0 end) from SNOrderAdjustment oa with (nolock) join SNOrderAdjType oat with (nolock) on oat.OrderAdjTypeID = oa.OrderAdjTypeID where oa.OrderID = OD.OrderID)) AS 'AS REPCOSTANDEXPENSES', 
	  dbo.fn_FormatXMLChars(isnull(SMP.FirstName,'') + ' ' + case when isnull(SMP.MiddleName,'') <> '' then  SMP.MiddleName + ' ' else '' end + isnull(SMP.LastName,'')) AS 'AS SALESMANAGERNAME', 
	 dbo.fn_FormatXMLChars(isnull(SRP.FirstName,'') + ' ' + case when isnull(SRP.MiddleName,'') <> '' then  SRP.MiddleName + ' ' else '' end + isnull(SRP.LastName,'')) AS 'AS SALESREP', 
	 dbo.fn_FormatPhoneNumber((select p.PhoneNbr from SNPhone p with (nolock) join SNEntityPhone e with (nolock) on e.PhoneID = p.PhoneID where e.EntityID = SRP.EntityID and e.PhoneTypeID = (select PhoneTypeID from SNPhoneType with (nolock) where SystemLabel = 'Person.CellPhone'))) AS 'AS SALESREPCELLPHONE', 
	 dbo.fn_FormatXMLChars(isnull(SRP.EmailAddress ,'')) AS 'AS SALESREPEMAIL', 
	 dbo.fn_FormatPhoneNumber(PH.PhoneNbr) AS 'AS SALESREPPHONE', 
	 dbo.fn_FormatXMLChars(isnull(PH.PhoneExt,'')) AS 'AS SALESREPPHONEEXT', 
	 dbo.fn_FormatXMLChars(isnull(SR.Title,'')) AS 'AS SALESREPTITLE', 
	 dbo.fn_FormatXMLChars(isnull(EN.ImportXref ,'')) AS 'AS SALESREPXREF', 
	 dbo.fn_FormatXMLChars(isnull(OD.SvcComments,'')) AS 'AS SERVICECOMMENTS', 
	 dbo.fn_FormatCurrency(OD.SalesRepCommissionAmt) AS 'AS SRCCOMMAMT', 
	 dbo.fn_FormatCurrency(OD.SRCommMaintBonus) AS 'AS SRCCOMMBONUS', 
	 dbo.fn_formatnumber(OD.SRCommPCTPaid * 100,2) + '%' AS 'AS SRCCOMMPCT', 
	 dbo.fn_FormatCurrency(OD.SRCommMaintService) AS 'AS SRCCOMMSVCBONUS', 
	 dbo.fn_FormatXMLChars(isnull(OD.InvoiceNbr,'')) AS 'AS SRCINVOICENBR', 
	 dbo.fn_FormatXMLChars(isnull(CLVL.Name,'')) AS 'AS SRCLEVELNAME', 
	 dbo.fn_FormatXMLChars(cast(isnull(OD.SRCommNote,'') as nvarchar(max))) AS 'AS SRCNOTE', 
	 dbo.fn_FormatCurrency(OD.SplitSRCommissionAmt) AS 'AS SRCOTHERSALESREPCOMMAMT', 
	 dbo.fn_formatnumber(OD.OtherSalesRepPCT,2) + '%' AS 'AS SRCOTHERSALESREPPCT', 
	 dbo.fn_FormatCurrency((select sum(EarnedCommAmt) from SNSRCommEarned with (nolock) where OrderID = OD.OrderID and UserID = OD.SalesRepUserID)) AS 'AS SRCPRIAMT', 
	 dbo.fn_FormatCurrency(isnull(OD.AdjGPAmt,0) * isnull(OD.SRCommPCTPaid,0)) AS 'AS SRCPRIAMTEQCOMM', 
	 dbo.fn_FormatCurrency(OD.PrimarySRCommissionAmt) AS 'AS SRCPRIMSALESREPCOMMAMT', 
	 dbo.fn_FormatXMLChars(isnull(OD.SalesOrderNbr,'')) AS 'AS SRCSALESORDER', 
	 dbo.fn_FormatCurrency(OD.SegmentBonusValue) AS 'AS SRCSEGMENTBONUSAMT', 
	 dbo.fn_FormatCurrency(OD.SRCommServiceValue) AS 'AS SRCSERVICEAMT', 
	 dbo.fn_formatnumber(OD.SRCommServiceRate * 100,2) + '%' AS 'AS SRCSERVICERATE', 
	 dbo.fn_FormatXMLChars(isnull((select isnull(oPR.FirstName,'') + ' ' + isnull(oPR.LastName,'') from SNUser oUS with (nolock) join SNPerson oPR with (nolock) on oPR.PersonID = oUS.PersonID where oUS.UserID = OD.OtherSalesRepUserID),'')) AS 'AS SRCSPLITREPNAME', 
	 dbo.fn_FormatCurrency(OD.SRCommTotalAmt) AS 'AS SRCTOTALCOMMAMT', 
	 dbo.fn_FormatXMLChars(isnull((select top 1 Note from SNOrderHistory h with (nolock) where h.OrderID = OD.OrderID and h.ToStatusID = OD.OrderStatusID order by DTChanged desc),'')) AS 'AS STATUSNOTE', 
	 dbo.fn_FormatCurrency(OD.SubTotalAmount) AS 'AS SUBTOTALSELLPRICE', 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.LineTotal * o.Lease24moFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS 'AS SUBTOTAL24MOPYMT', 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.LineTotal * o.Lease36moFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS 'AS SUBTOTAL36MOPYMT', 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.LineTotal * o.Lease48moFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS 'AS SUBTOTAL48MOPYMT', 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.LineTotal * o.Lease60moFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS 'AS SUBTOTAL60MOPYMT', 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.LineTotal * o.LeaseFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS 'AS SUBTOTALLEASEPYMT', 
	 dbo.fn_FormatCurrency((select sum(val) from (select cast(convert(nvarchar(50),convert(money,coalesce(l.SellPrice * o.LeaseFactor,0)),1) as money) val from SNOrderLine l with (nolock) join SNOrder o with (nolock) on o.OrderID = l.OrderID where isnull(l.ServiceInd,0) = 0 and l.OrderID = OD.OrderID) t)) AS 'AS SUBTOTALUNITLEASEPYMT', 
	 case when isnull(OD.SVANNUALGP,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVANNUALGP) end AS 'AS SVANNUALGP', 
	 case when isnull(OD.SVANNUALPRICE,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVANNUALPRICE) end AS 'AS SVANNUALPRICE', 
	 case when isnull(SBT.PaymentsPerYear,0) = 1 then 'X' else '' end AS 'AS SVBASEBILLFREQANX', 
	 case when isnull(SBT.PaymentsPerYear,0) = 12 then 'X' else '' end AS 'AS SVBASEBILLFREQMOX', 
	 case when isnull(SBT.PaymentsPerYear,0) = 4 then 'X' else '' end AS 'AS SVBASEBILLFREQQTRX', 
	 case when isnull(SBT.PaymentsPerYear,0) = 2 then 'X' else '' end AS 'AS SVBASEBILLFREQSAX', 
	 dbo.fn_FormatXMLChars(isnull(SBT.Name,'')) AS 'AS SVBILLCYCLENAME', 
	 dbo.fn_FormatXMLChars(isnull(SBT.OtherName,'')) AS 'AS SVBILLCYCLENAMEOTHER', 
	 case when isnull(SBT.PaymentsPerYear,0) = 0 then '' else dbo.fn_FORMATNumber(SBT.PaymentsPerYear,0) end AS 'AS SVBILLCYCLEPPY', 
	 case when isnull(OD.SVCOSTPERUSER,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVCOSTPERUSER) end AS 'AS SVCOSTPERUSER', 
	 case when isnull(OD.SVSTARTDT,'1/1/1900') = '1/1/1900' or isnull(OD.SVTERM,0) = 0 then '' else convert(nvarchar, dateadd(mm,OD.SVTERM,OD.SVSTARTDT), 101) end AS 'AS SVENDDT', 
	 case when isnull(OD.SVMOCOST,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVMOCOST) end AS 'AS SVMOCOST', 
	 case when isnull(OD.SVMOGP,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVMOGP) end AS 'AS SVMOGP', 
	 case when isnull(OD.SVMOREPCOST,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVMOREPCOST) end AS 'AS SVMOREPCOST', 
	 case when isnull(OD.SVMOSELLPRICE,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVMOSELLPRICE) end AS 'AS SVMOSELLPRICE', 
	 case when isnull(OD.SVMOSELLPRICE,0) = 0 then '' else replace(dbo.fn_FormatCurrency(OD.SVMOSELLPRICE),'$','') end AS 'AS SVMOSELLPRICENOSIGN', 
	 case when isnull(OD.SVNBRUSERS,0) = 0 then '' else dbo.fn_FormatNumber(OD.SVNBRUSERS,0) end AS 'AS SVNBRUSERS', 
	 case when isnull(OD.SVMOSELLPRICE,0) = 0 or isnull(SBT.PaymentsPerYear,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVMOSELLPRICE * (12/isnull(SBT.PaymentsPerYear,12))) end AS 'AS SVPERIODSELLPRICE', 
	 case when isnull(OD.SVSTARTDT,'1/1/1900') = '1/1/1900' then '' else convert(nvarchar, OD.SVSTARTDT, 101) end AS 'AS SVSTARTDT', 
	 case when isnull(OD.SVTERM,0) = 0 then '' else dbo.fn_FormatNumber(OD.SVTERM,0) end AS 'AS SVTERM', 
	 case when isnull(OD.SVTOTALGP,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVTOTALGP) end AS 'AS SVTOTALGP', 
	 case when isnull(OD.SVTOTALVALUE,0) = 0 then '' else dbo.fn_FormatCurrency(OD.SVTOTALVALUE) end AS 'AS SVTOTALVALUE', 
	 case when isnull(ST.IsLeased,0) = 0 and OD.SaleTypeID > 0 then 'n/a' else dbo.fn_FormatCurrency((isnull(OD.AmtFinanced ,0) * isnull(OD.LeaseFactor ,0)) * isnull(LP.NbrDown,0))  end AS 'AS TOTALADVLEASEPYMT', 
	 dbo.fn_FormatCurrency((select sum(OL.DealerCostAmt) from SNOrderLine OL with (nolock) where OL.OrderID = OD.OrderID)) AS 'AS TOTALDEALERCOST', 
	 dbo.fn_FormatCurrency(ISNULL(OD.TotalMSRP,0)) AS 'AS TOTALMSRP', 
	 dbo.fn_formatnumber(ISNULL(case when OD.TotalMSRP > 0 and OD.AmtFinanced > 0 then OD.AmtFinanced/OD.TotalMSRP else OD.TotalMSRP end,0) * 100,0) + '%' AS 'AS TOTALMSRPPCTFIN', 
	 cast(isnull(LP.NbrDown,0) as nvarchar) AS 'AS TOTALNUMADVLEASEPYMT', 
	 cast(isnull(LP.NbrDeferred,0) as nvarchar) AS 'AS TOTALNUMDEFLEASEPYMT', 
	 dbo.fn_FormatCurrency(TotalOrderAmount - isnull((select AdjAmount from SNOrderAdjustment oa with (nolock) join SNOrderAdjType oat with (nolock) on oat.OrderAdjTypeID = oa.OrderAdjTypeID where oa.OrderID = OD.OrderID and oat.Taxind = -1),0)) AS 'AS TOTALSELLNOTAX', 
	 dbo.fn_FormatCurrency(TotalOrderAmount) AS 'AS TOTALSELLPRICE', 
	 dbo.fn_FormatCurrency(OD.MaintTotalValue) AS 'AS TOTALSERVICECONTRACT', 
	 dbo.fn_FormatXMLChars(isnull(TC.Name,'')) AS 'AS TRAVELCATEGORY', 
	 dbo.fn_FormatXMLChars(isnull(TC.DocDescription,'')) AS 'AS TRAVELCATEGORYDOCDESC', 
	 dbo.fn_FormatCurrency(TC.MinimumCharge) AS 'AS TRAVELCATEGORYMINCHARGE', 
	 dbo.fn_FormatCurrency(TC.MillageCharge) AS 'AS TRAVELCATEGORYMILLAGECHARGE', 
	 dbo.fn_FormatCurrency(TC.DailyCostPerPersonAmt) AS 'AS TRAVELCATEGORYPERPERSONDAILYCOST', 
	 dbo.fn_formatnumber(OD.TravelNbrNights,0) AS 'AS TRAVELFEENBRDAYS', 
	 dbo.fn_formatnumber(OD.TravelNbrMiles,0) AS 'AS TRAVELFEENBRMILES', 
	 dbo.fn_formatnumber(OD.TravelNbrPeople,0) AS 'AS TRAVELFEENBRPEOPLE', 
	 case when OS.SystemLabel = 'PROP' then 'Proposal' else 'Order' end AS 'AS TYPEOFOBJECT', 
	 dbo.fn_FormatXMLChars(isnull(ST.Name,'')) AS 'AS TYPEOFSALE', 
	 case when OS.SystemLabel = 'PROP' then 'P-' else '' end  + cast(OD.OrderID as nvarchar) AS 'AS TYPEORDERID', 
	 dbo.fn_FormatXMLChars(replace(isnull(UCO.Name,''),'_',' ')) AS 'AS UPGRADEFCONAME', 
	 dbo.fn_FormatXMLChars(case when len(isnull(UFC.RPTCity,'')) > 0 then isnull(UFC.RPTAddress1,'') + case when LEN(isnull(UFC.RPTAddress2,'')) > 0 then ' ' + isnull(UFC.RPTAddress2,'') else '' end  + ', ' +  isnull(UFC.RPTCity,'') + ', ' + isnull(UFC.RPTState,'') + ' ' + isnull(UFC.RPTZip,'') else '' end) AS 'AS UPGRADEFCOADDRESSONELINE', 
	 dbo.fn_FormatXMLChars(isnull(UFC.RPTAddress1,'')) AS 'AS UPGRADEFCOADDRESS1', 
	 dbo.fn_FormatXMLChars(isnull(UFC.RPTAddress2,'')) AS 'AS UPGRADEFCOADDRESS2', 
	 dbo.fn_FormatXMLChars(isnull(UFC.RPTCity,'')) AS 'AS UPGRADEFCOCITY', 
	 dbo.fn_FormatXMLChars(isnull(UFC.RPTState,'')) AS 'AS UPGRADEFCOSTATE', 
	 dbo.fn_FormatXMLChars(isnull(UFC.RPTZip,'')) AS 'AS UPGRADEFCOZIP', 
	 dbo.fn_FormatXMLChars(case when isnull(OD.LeaseUpgradeInd,0) = -1 then  isnull(OD.UpgradeFCOLeaseNbr,'') else '' end) AS 'AS UPGRADELSNBR', 
	 case when isnull(OD.LeaseUpgradeInd,0) = 0 then 'X' else '' end AS 'AS UPGRADENOX', 
	 isnull((select Name from SNUpgradeType with (nolock) where UpgradeTypeID = OD.UpgradeTypeID),'') AS 'AS UPGRADETYPE', 
	 case when isnull(OD.LeaseUpgradeInd,0) = -1 then 'Yes' else 'No' end AS 'AS UPGRADEYESNO', 
	 case when isnull(OD.LeaseUpgradeInd,0) = -1 then 'X' else '' end AS 'AS UPGRADEYESX', 
	 dbo.fn_FormatCurrency(OD.SPMTotalMoAdjAmt) AS 'AS TOTALMOAMT', 
	 dbo.fn_FormatCurrency(OD.SPMTotalMoAdjAmtActual) AS 'AS TOTALMOAMTACTUAL', 
	 case when isnull(OD.WTMORevAmt,0) = 0 then '' else dbo.fn_FormatCurrency(OD.WTMORevAmt) end AS 'AS WTMOREVAMT', 
	 case when isnull(OD.WTMOGPAmt,0) = 0 then '' else dbo.fn_FormatCurrency(OD.WTMOGPAmt) end AS 'AS WTMOGPAMT', 
	 case when isnull(OD.WTTerm,0) = 0 then '' else dbo.fn_FormatNumber(OD.WTTerm,0) end AS 'AS WTTERM', 
	 dbo.fn_FormatXMLChars(isnull(OD.CreditAppNote ,''))
            FROM SNOrder AS OD with (nolock) 
            LEFT JOIN SNContractType as CT with (nolock) on CT.ContractTypeID = OD.MaintContractTypeID 
            LEFT JOIN SNBillingCycleType as BT with (nolock) on BT.BillingCycleTypeID = OD.MaintBillingCycle 
            LEFT JOIN SNBillingCycleType as OBT with (nolock) on OBT.BillingCycleTypeID = OD.MaintOverBillingCycle
            LEFT JOIN SNBillingCycleType as SBT with (nolock) on SBT.BillingCycleTypeID = OD.SVBillingCycleID
            LEFT JOIN SNLeaseProduct as LP with (nolock) on LP.LeaseProductID = OD.LeaseProductID 
            LEFT JOIN SNSaleType as ST with (nolock) on ST.SaleTypeID = OD.SaleTypeID 
            LEFT JOIN SNOrderStatus as OS with (nolock) on OS.OrderStatusID = OD.OrderStatusID 
            LEFT JOIN SNPriceLevel as PL with (nolock) on PL.PriceLevelID = OD.PriceLevelID 
            LEFT JOIN SNLeasePriceLevel as LPL with (nolock) on LPL.LeasePriceLevelID = OD.LeasePriceLevelID 
            LEFT JOIN SNCustomer as BCU with (nolock) on BCU.CustomerID = OD.BillToAccountSelect 
            LEFT JOIN SNUser as SR with (nolock) on SR.UserID = OD.SalesRepUserID 
            LEFT JOIN SNPerson as SRP with (nolock) on SRP.PersonID = SR.PersonID 
            LEFT JOIN SNEntityPhone as EP with (nolock) on EP.EntityID = SRP.EntityID and EP.PhoneTypeID = (Select PhoneTypeID FROM SNPhoneType with (nolock) where Name = 'Office') 
            LEFT JOIN SNPhone as PH with (nolock) on PH.PhoneID = EP.PhoneID 
            LEFT JOIN SNEntity as EN with (nolock) on EN.EntityID = SRP.EntityID 
            LEFT JOIN SNBranch as BR with (nolock) on BR.BranchID = SR.BranchID 
            LEFT JOIN SNBusiness as BU with (nolock) on BU.BusinessID = BR.BusinessID 
            LEFT JOIN SNProspect as PR with (nolock) on PR.ProspectID = OD.ProspectID 
            LEFT JOIN SNFinanceCompany as FC with (nolock) on FC.FCOID = OD.FCOID
            LEFT JOIN SNCompany as CO with (nolock) on CO.CompanyID = FC.CompanyID
            LEFT JOIN SNFinanceCompany as UFC with (nolock) on UFC.FCOID = OD.UpgradeFCOID
            LEFT JOIN SNCompany as UCO with (nolock) on UCO.CompanyID = UFC.CompanyID
            LEFT JOIN SNSRCommCSMPLevel as CSMP with (nolock) on CSMP.SRCommCSMPLevelID = OD.SRCommCSMPLevelID
            LEFT JOIN SNSRCommLevel as CLVL with (nolock) on CLVL.SRCommLevelID = OD.SRCommLevelID
            LEFT JOIN SNUser as SMU with (nolock) on SMU.UserID = BR.SalesManagerUserID
            LEFT JOIN SNPerson as SMP with (nolock) on SMP.PersonID = SMU.PersonID
            LEFT JOIN SNDMPaymentTerms as IPB with (nolock) on IPB.DMPaymentTermsID = OD.ITPPaymentTermsID
            LEFT JOIN SNDMPaymentTerms as BTB with (nolock) on BTB.DMPaymentTermsID = OD.ITP_BOT_PaymentTermsID
            LEFT JOIN SNDMPaymentTerms as DMB with (nolock) on DMB.DMPaymentTermsID = OD.DMPaymentTermsID
            LEFT JOIN SNCreditApplication as CA with (nolock) on CA.OrderID = OD.OrderID AND CA.SelectedSource = -1
            LEFT JOIN SNFinanceCompany as CFC with (nolock) on CFC.FCOID = CA.FCOID
            LEFT JOIN SNTravelCategory as TC with (nolock) on TC.TravelCategoryID = OD.TravelCategoryID